[{"E:\\workspace_react\\zt-tm\\src\\app.tsx":"1","E:\\workspace_react\\zt-tm\\src\\components\\Iconfont\\index.tsx":"2","E:\\workspace_react\\zt-tm\\src\\components\\LocaleProvider\\index.tsx":"3","E:\\workspace_react\\zt-tm\\src\\components\\PageHeader\\index.tsx":"4","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Footer\\index.tsx":"5","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\GlobalSearch\\index.tsx":"6","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\HeaderAvatar\\index.tsx":"7","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Lang\\index.jsx":"8","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Logo\\index.tsx":"9","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Notice\\index.tsx":"10","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\PageNav\\index.tsx":"11","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\index.tsx":"12","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\menuConfig.ts":"13","E:\\workspace_react\\zt-tm\\src\\layouts\\UserLayout\\index.tsx":"14","E:\\workspace_react\\zt-tm\\src\\locales\\en-US\\index.ts":"15","E:\\workspace_react\\zt-tm\\src\\locales\\locale.js":"16","E:\\workspace_react\\zt-tm\\src\\locales\\zh-CN\\index.ts":"17","E:\\workspace_react\\zt-tm\\src\\models\\user.ts":"18","E:\\workspace_react\\zt-tm\\src\\pages\\Advanced\\components\\AdvancedDetailHead\\index.tsx":"19","E:\\workspace_react\\zt-tm\\src\\pages\\Advanced\\index.tsx":"20","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardAreaChart\\index.tsx":"21","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardAreaChart\\mock.js":"22","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardBarChart\\index.tsx":"23","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardBarChart\\mock.js":"24","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardGroupBarChart\\index.tsx":"25","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardLineChart\\index.tsx":"26","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardLineChart\\mock.js":"27","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardPieChart\\index.tsx":"28","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardRankChart\\index.tsx":"29","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardTypebarChart\\index.tsx":"30","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardTypebarChart\\mock.js":"31","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\index.tsx":"32","E:\\workspace_react\\zt-tm\\src\\pages\\BasicDetailPage\\components\\BasicDetail\\index.tsx":"33","E:\\workspace_react\\zt-tm\\src\\pages\\BasicDetailPage\\index.tsx":"34","E:\\workspace_react\\zt-tm\\src\\pages\\BasicListPage\\components\\BasicList\\index.tsx":"35","E:\\workspace_react\\zt-tm\\src\\pages\\BasicListPage\\index.tsx":"36","E:\\workspace_react\\zt-tm\\src\\pages\\CardListPage\\components\\CardList\\index.tsx":"37","E:\\workspace_react\\zt-tm\\src\\pages\\CardListPage\\index.tsx":"38","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackFail\\components\\FailDetail\\index.tsx":"39","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackFail\\index.tsx":"40","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\components\\Forbidden\\components\\Exception\\index.tsx":"41","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\components\\Forbidden\\index.tsx":"42","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\index.tsx":"43","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\components\\NotFound\\components\\Exception\\index.tsx":"44","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\components\\NotFound\\index.tsx":"45","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\index.tsx":"46","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\components\\ServerError\\components\\Exception\\index.tsx":"47","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\components\\ServerError\\index.tsx":"48","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\index.tsx":"49","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\components\\SuccessDetail\\index.tsx":"50","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\components\\SuccessDetail\\utils.tsx":"51","E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\index.tsx":"52","E:\\workspace_react\\zt-tm\\src\\pages\\FlowGroup\\components\\FlowForm\\index.tsx":"53","E:\\workspace_react\\zt-tm\\src\\pages\\FlowGroup\\index.tsx":"54","E:\\workspace_react\\zt-tm\\src\\pages\\FormBasic\\components\\BasicForm\\index.tsx":"55","E:\\workspace_react\\zt-tm\\src\\pages\\FormBasic\\index.tsx":"56","E:\\workspace_react\\zt-tm\\src\\pages\\FormClassified\\components\\ClassifiedForm\\index.tsx":"57","E:\\workspace_react\\zt-tm\\src\\pages\\FormClassified\\index.tsx":"58","E:\\workspace_react\\zt-tm\\src\\pages\\FormFour\\components\\FourColumnForm\\index.tsx":"59","E:\\workspace_react\\zt-tm\\src\\pages\\FormFour\\index.tsx":"60","E:\\workspace_react\\zt-tm\\src\\pages\\FormGroup\\components\\GroupForm\\index.tsx":"61","E:\\workspace_react\\zt-tm\\src\\pages\\FormGroup\\index.tsx":"62","E:\\workspace_react\\zt-tm\\src\\pages\\FormHierarchical\\components\\HierarchicalForm\\index.tsx":"63","E:\\workspace_react\\zt-tm\\src\\pages\\FormHierarchical\\index.tsx":"64","E:\\workspace_react\\zt-tm\\src\\pages\\FormStep\\components\\StepForm\\index.tsx":"65","E:\\workspace_react\\zt-tm\\src\\pages\\FormStep\\index.tsx":"66","E:\\workspace_react\\zt-tm\\src\\pages\\FormThree\\components\\ThreeColumnForm\\index.tsx":"67","E:\\workspace_react\\zt-tm\\src\\pages\\FormThree\\index.tsx":"68","E:\\workspace_react\\zt-tm\\src\\pages\\FormTwo\\components\\TwoColumnForm\\index.tsx":"69","E:\\workspace_react\\zt-tm\\src\\pages\\FormTwo\\index.tsx":"70","E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\CustomList.tsx":"71","E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\index.tsx":"72","E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\util.tsx":"73","E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\index.tsx":"74","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\DialogOperation.tsx":"75","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\EmptyBlock.tsx":"76","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\ExceptionBlock.tsx":"77","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\index.tsx":"78","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\Operation.tsx":"79","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\index.tsx":"80","E:\\workspace_react\\zt-tm\\src\\pages\\FusionExpandTable\\components\\ExpandTable\\index.tsx":"81","E:\\workspace_react\\zt-tm\\src\\pages\\FusionExpandTable\\index.tsx":"82","E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\EmptyBlock.tsx":"83","E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\ExceptionBlock.tsx":"84","E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\index.tsx":"85","E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\index.tsx":"86","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMergecellTable\\components\\MergeCellTable\\index.tsx":"87","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMergecellTable\\index.tsx":"88","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\EmptyBlock.tsx":"89","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\ExceptionBlock.tsx":"90","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\index.tsx":"91","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\index.tsx":"92","E:\\workspace_react\\zt-tm\\src\\pages\\FusionSinglecolTable\\components\\SingleColFilterTable\\index.tsx":"93","E:\\workspace_react\\zt-tm\\src\\pages\\FusionSinglecolTable\\index.tsx":"94","E:\\workspace_react\\zt-tm\\src\\pages\\FusionSingletreeTable\\components\\SingleTreeTable\\index.tsx":"95","E:\\workspace_react\\zt-tm\\src\\pages\\FusionSingletreeTable\\index.tsx":"96","E:\\workspace_react\\zt-tm\\src\\pages\\Login\\components\\LoginBlock\\index.tsx":"97","E:\\workspace_react\\zt-tm\\src\\pages\\Login\\components\\LoginBlock\\utils.tsx":"98","E:\\workspace_react\\zt-tm\\src\\pages\\Login\\index.tsx":"99","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardAreaChart\\index.tsx":"100","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardAreaChart\\mock.js":"101","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardPieChart\\index.tsx":"102","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\TrendChart\\index.tsx":"103","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\VisitBlock\\index.tsx":"104","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\WebInfoBlock\\index.tsx":"105","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\index.tsx":"106","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\mock.js":"107","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\index.tsx":"108","E:\\workspace_react\\zt-tm\\src\\pages\\Person\\components\\SettingPersonBlock\\index.tsx":"109","E:\\workspace_react\\zt-tm\\src\\pages\\Person\\index.tsx":"110","E:\\workspace_react\\zt-tm\\src\\pages\\Register\\components\\LoginBlock\\index.tsx":"111","E:\\workspace_react\\zt-tm\\src\\pages\\Register\\components\\LoginBlock\\utils.tsx":"112","E:\\workspace_react\\zt-tm\\src\\pages\\Register\\index.tsx":"113","E:\\workspace_react\\zt-tm\\src\\pages\\Settings\\components\\SettingSystemBlock\\index.tsx":"114","E:\\workspace_react\\zt-tm\\src\\pages\\Settings\\index.tsx":"115","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\SelectLang\\index.tsx":"116","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\Tasks\\index.tsx":"117","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\UserInfo\\index.tsx":"118","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\index.tsx":"119","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\models\\tasks.ts":"120","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\store.ts":"121","E:\\workspace_react\\zt-tm\\src\\pages\\TableListPage\\components\\BasicList\\index.tsx":"122","E:\\workspace_react\\zt-tm\\src\\pages\\TableListPage\\index.tsx":"123","E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\components\\WorkTable\\index.tsx":"124","E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\components\\WorkTable\\mock.js":"125","E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\index.tsx":"126","E:\\workspace_react\\zt-tm\\src\\routes.ts":"127","E:\\workspace_react\\zt-tm\\src\\store.ts":"128","E:\\workspace_react\\zt-tm\\src\\typings.d.ts":"129","E:\\workspace_react\\zt-tm\\src\\utils\\locale.ts":"130"},{"size":439,"mtime":1618824980308,"results":"131","hashOfConfig":"132"},{"size":262,"mtime":1618823251654,"results":"133","hashOfConfig":"132"},{"size":1265,"mtime":1618817626664,"results":"134","hashOfConfig":"132"},{"size":1085,"mtime":1618821584188,"results":"135","hashOfConfig":"132"},{"size":399,"mtime":1618821286168,"results":"136","hashOfConfig":"132"},{"size":708,"mtime":1618817626665,"results":"137","hashOfConfig":"132"},{"size":1544,"mtime":1618887868955,"results":"138","hashOfConfig":"132"},{"size":731,"mtime":1618825463033,"results":"139","hashOfConfig":"132"},{"size":449,"mtime":1618817626666,"results":"140","hashOfConfig":"132"},{"size":2825,"mtime":1618817626666,"results":"141","hashOfConfig":"132"},{"size":3051,"mtime":1618817626666,"results":"142","hashOfConfig":"132"},{"size":2528,"mtime":1618887814763,"results":"143","hashOfConfig":"132"},{"size":3575,"mtime":1618817626661,"results":"144","hashOfConfig":"132"},{"size":291,"mtime":1618817626667,"results":"145","hashOfConfig":"132"},{"size":599,"mtime":1618824428849,"results":"146","hashOfConfig":"132"},{"size":601,"mtime":1618826583741,"results":"147","hashOfConfig":"132"},{"size":600,"mtime":1618824413979,"results":"148","hashOfConfig":"132"},{"size":573,"mtime":1618817626661,"results":"149","hashOfConfig":"132"},{"size":11161,"mtime":1618817626667,"results":"150","hashOfConfig":"132"},{"size":557,"mtime":1618817626667,"results":"151","hashOfConfig":"132"},{"size":1833,"mtime":1618817626667,"results":"152","hashOfConfig":"132"},{"size":300,"mtime":1618817625227,"results":"153","hashOfConfig":"132"},{"size":1750,"mtime":1618817626669,"results":"154","hashOfConfig":"132"},{"size":300,"mtime":1618817625227,"results":"155","hashOfConfig":"132"},{"size":2527,"mtime":1618817626667,"results":"156","hashOfConfig":"132"},{"size":2061,"mtime":1618817626667,"results":"157","hashOfConfig":"132"},{"size":359,"mtime":1618817625227,"results":"158","hashOfConfig":"132"},{"size":3387,"mtime":1618817626669,"results":"159","hashOfConfig":"132"},{"size":3280,"mtime":1618817626667,"results":"160","hashOfConfig":"132"},{"size":1833,"mtime":1618817626669,"results":"161","hashOfConfig":"132"},{"size":135,"mtime":1618817625227,"results":"162","hashOfConfig":"132"},{"size":1452,"mtime":1618817626669,"results":"163","hashOfConfig":"132"},{"size":4325,"mtime":1618817626669,"results":"164","hashOfConfig":"132"},{"size":741,"mtime":1618817626671,"results":"165","hashOfConfig":"132"},{"size":5031,"mtime":1618817626671,"results":"166","hashOfConfig":"132"},{"size":758,"mtime":1618817626672,"results":"167","hashOfConfig":"132"},{"size":4320,"mtime":1618817626672,"results":"168","hashOfConfig":"132"},{"size":753,"mtime":1618817626672,"results":"169","hashOfConfig":"132"},{"size":1281,"mtime":1618817626672,"results":"170","hashOfConfig":"132"},{"size":809,"mtime":1618817626672,"results":"171","hashOfConfig":"132"},{"size":795,"mtime":1618817626672,"results":"172","hashOfConfig":"132"},{"size":315,"mtime":1618817626672,"results":"173","hashOfConfig":"132"},{"size":789,"mtime":1618817626674,"results":"174","hashOfConfig":"132"},{"size":795,"mtime":1618817626674,"results":"175","hashOfConfig":"132"},{"size":314,"mtime":1618817626674,"results":"176","hashOfConfig":"132"},{"size":784,"mtime":1618817626675,"results":"177","hashOfConfig":"132"},{"size":795,"mtime":1618817626675,"results":"178","hashOfConfig":"132"},{"size":317,"mtime":1618817626675,"results":"179","hashOfConfig":"132"},{"size":799,"mtime":1618817626675,"results":"180","hashOfConfig":"132"},{"size":1985,"mtime":1618817626675,"results":"181","hashOfConfig":"132"},{"size":433,"mtime":1618817626763,"results":"182","hashOfConfig":"132"},{"size":824,"mtime":1618817626675,"results":"183","hashOfConfig":"132"},{"size":11875,"mtime":1618817626677,"results":"184","hashOfConfig":"132"},{"size":678,"mtime":1618817626676,"results":"185","hashOfConfig":"132"},{"size":3211,"mtime":1618817626676,"results":"186","hashOfConfig":"132"},{"size":735,"mtime":1618817626677,"results":"187","hashOfConfig":"132"},{"size":5115,"mtime":1618817626678,"results":"188","hashOfConfig":"132"},{"size":706,"mtime":1618817626677,"results":"189","hashOfConfig":"132"},{"size":4939,"mtime":1618817626677,"results":"190","hashOfConfig":"132"},{"size":748,"mtime":1618817626677,"results":"191","hashOfConfig":"132"},{"size":11788,"mtime":1618817626679,"results":"192","hashOfConfig":"132"},{"size":681,"mtime":1618817626681,"results":"193","hashOfConfig":"132"},{"size":5074,"mtime":1618817626683,"results":"194","hashOfConfig":"132"},{"size":716,"mtime":1618817626681,"results":"195","hashOfConfig":"132"},{"size":4353,"mtime":1618817626681,"results":"196","hashOfConfig":"132"},{"size":676,"mtime":1618817626681,"results":"197","hashOfConfig":"132"},{"size":4037,"mtime":1618817626681,"results":"198","hashOfConfig":"132"},{"size":753,"mtime":1618817626683,"results":"199","hashOfConfig":"132"},{"size":3400,"mtime":1618817626685,"results":"200","hashOfConfig":"132"},{"size":743,"mtime":1618817626683,"results":"201","hashOfConfig":"132"},{"size":3776,"mtime":1618817626663,"results":"202","hashOfConfig":"132"},{"size":4625,"mtime":1618817626683,"results":"203","hashOfConfig":"132"},{"size":246,"mtime":1618817626763,"results":"204","hashOfConfig":"132"},{"size":814,"mtime":1618817626683,"results":"205","hashOfConfig":"132"},{"size":1252,"mtime":1618817626664,"results":"206","hashOfConfig":"132"},{"size":385,"mtime":1618817626664,"results":"207","hashOfConfig":"132"},{"size":553,"mtime":1618817626664,"results":"208","hashOfConfig":"132"},{"size":5572,"mtime":1618817626686,"results":"209","hashOfConfig":"132"},{"size":2740,"mtime":1618817626763,"results":"210","hashOfConfig":"132"},{"size":802,"mtime":1618817626685,"results":"211","hashOfConfig":"132"},{"size":3153,"mtime":1618817626685,"results":"212","hashOfConfig":"132"},{"size":802,"mtime":1618817626685,"results":"213","hashOfConfig":"132"},{"size":413,"mtime":1618817626664,"results":"214","hashOfConfig":"132"},{"size":537,"mtime":1618817626664,"results":"215","hashOfConfig":"132"},{"size":4413,"mtime":1618817626685,"results":"216","hashOfConfig":"132"},{"size":814,"mtime":1618817626686,"results":"217","hashOfConfig":"132"},{"size":2546,"mtime":1618817626687,"results":"218","hashOfConfig":"132"},{"size":865,"mtime":1618817626686,"results":"219","hashOfConfig":"132"},{"size":385,"mtime":1618817626664,"results":"220","hashOfConfig":"132"},{"size":564,"mtime":1618817626664,"results":"221","hashOfConfig":"132"},{"size":6990,"mtime":1618817626686,"results":"222","hashOfConfig":"132"},{"size":842,"mtime":1618817626687,"results":"223","hashOfConfig":"132"},{"size":4367,"mtime":1618817626689,"results":"224","hashOfConfig":"132"},{"size":847,"mtime":1618817626688,"results":"225","hashOfConfig":"132"},{"size":7259,"mtime":1618817626688,"results":"226","hashOfConfig":"132"},{"size":837,"mtime":1618817626689,"results":"227","hashOfConfig":"132"},{"size":5084,"mtime":1618817626753,"results":"228","hashOfConfig":"132"},{"size":433,"mtime":1618817626763,"results":"229","hashOfConfig":"132"},{"size":337,"mtime":1618817626689,"results":"230","hashOfConfig":"132"},{"size":1803,"mtime":1618817626689,"results":"231","hashOfConfig":"132"},{"size":300,"mtime":1618817625231,"results":"232","hashOfConfig":"132"},{"size":2129,"mtime":1618817626753,"results":"233","hashOfConfig":"132"},{"size":4777,"mtime":1618817626753,"results":"234","hashOfConfig":"132"},{"size":3588,"mtime":1618817626754,"results":"235","hashOfConfig":"132"},{"size":1155,"mtime":1618817626755,"results":"236","hashOfConfig":"132"},{"size":1211,"mtime":1618817626755,"results":"237","hashOfConfig":"132"},{"size":541,"mtime":1618817625232,"results":"238","hashOfConfig":"132"},{"size":598,"mtime":1618817626755,"results":"239","hashOfConfig":"132"},{"size":4192,"mtime":1618817626755,"results":"240","hashOfConfig":"132"},{"size":593,"mtime":1618817626757,"results":"241","hashOfConfig":"132"},{"size":4616,"mtime":1618817626759,"results":"242","hashOfConfig":"132"},{"size":433,"mtime":1618817626763,"results":"243","hashOfConfig":"132"},{"size":343,"mtime":1618817626757,"results":"244","hashOfConfig":"132"},{"size":7624,"mtime":1618817626757,"results":"245","hashOfConfig":"132"},{"size":739,"mtime":1618817626757,"results":"246","hashOfConfig":"132"},{"size":1175,"mtime":1618817626759,"results":"247","hashOfConfig":"132"},{"size":2052,"mtime":1618817626760,"results":"248","hashOfConfig":"132"},{"size":603,"mtime":1618817626760,"results":"249","hashOfConfig":"132"},{"size":812,"mtime":1618817626760,"results":"250","hashOfConfig":"132"},{"size":962,"mtime":1618817626661,"results":"251","hashOfConfig":"132"},{"size":133,"mtime":1618817626661,"results":"252","hashOfConfig":"132"},{"size":6721,"mtime":1618817626760,"results":"253","hashOfConfig":"132"},{"size":731,"mtime":1618817626761,"results":"254","hashOfConfig":"132"},{"size":10665,"mtime":1618817626763,"results":"255","hashOfConfig":"132"},{"size":4216,"mtime":1618817625232,"results":"256","hashOfConfig":"132"},{"size":540,"mtime":1618817626763,"results":"257","hashOfConfig":"132"},{"size":5084,"mtime":1618817626663,"results":"258","hashOfConfig":"132"},{"size":130,"mtime":1618817626661,"results":"259","hashOfConfig":"132"},{"size":316,"mtime":1618817626661,"results":"260","hashOfConfig":"132"},{"size":587,"mtime":1618817626659,"results":"261","hashOfConfig":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pzidkf",{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"444"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"453"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"466"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\workspace_react\\zt-tm\\src\\app.tsx",[],"E:\\workspace_react\\zt-tm\\src\\components\\Iconfont\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\components\\LocaleProvider\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\components\\PageHeader\\index.tsx",["555","556"],"import React, { SFC } from 'react';\nimport { Breadcrumb, Box, Typography } from '@alifd/next';\nimport styles from './index.module.scss';\n\nexport interface PageHeaderProps {\n  breadcrumbs?: Array<{ name: string; path?: string }>;\n  title?: string;\n  description?: string;\n}\n\nconst PageHeader: SFC<PageHeaderProps> = (props) => {\n  const { breadcrumbs, title, description, ...others } = props;\n  return (\n    <Box spacing={8} className={styles.PageHeader} {...others}>\n      {breadcrumbs && breadcrumbs.length > 0 ? (\n        <Breadcrumb className={styles.Breadcrumbs} separator=\" / \">\n          {breadcrumbs.map((item, idx) => (\n            <Breadcrumb.Item key={idx} link={item.path}>\n              {item.name}\n            </Breadcrumb.Item>\n          ))}\n        </Breadcrumb>\n      ) : null}\n\n      {/* {title && <Typography.Text className={styles.Title}>{title}</Typography.Text>} */}\n\n      {/* {\n        description && (\n          <Typography.Text className={styles.Description}>{description}</Typography.Text>\n        )\n      } */}\n    </Box>\n  );\n};\n\nexport default PageHeader;\n","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Footer\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\GlobalSearch\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\HeaderAvatar\\index.tsx",["557"],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Lang\\index.jsx",["558","559"],"import React, { useState } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Radio } from '@alifd/next';\r\nimport { setLocale, getLocale } from '@/locales/locale';\r\nimport styles from './index.module.scss';\r\n\r\nexport default injectIntl(({ intl }) => {\r\n  console.log(getLocale(), 333);\r\n  const [lang, setLang] = useState(getLocale());\r\n  const selectLang = (value) => {\r\n    setLocale(value);\r\n    setLang(value);\r\n  };\r\n\r\n  return (\r\n    <Radio.Group className={styles.lang} shape=\"button\" value={lang} onChange={selectLang}>\r\n      <Radio value=\"zh-CN\">{intl.formatMessage({ id: 'Lang.zhCN' })}</Radio>\r\n      <Radio value=\"en-US\">{intl.formatMessage({ id: 'Lang.enUS' })}</Radio>\r\n    </Radio.Group>\r\n  );\r\n});\r\n","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Logo\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Notice\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\PageNav\\index.tsx",["560"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'ice';\nimport { Nav } from '@alifd/next';\nimport { asideMenuConfig } from '../../menuConfig';\n\nconst { SubNav } = Nav;\nconst NavItem = Nav.Item;\n\n// mock the auth object\n// Ref: https://ice.work/docs/guide/advance/auth#%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9D%83%E9%99%90%E6%95%B0%E6%8D%AE\nconst AUTH_CONFIG = {\n  admin: true,\n  guest: false,\n};\n\nexport interface IMenuItem {\n  name: string;\n  path: string;\n  icon?: string;\n  children?: IMenuItem[];\n}\n\nfunction getNavMenuItems(menusData: any[], initIndex?: number | string, auth?: any) {\n  if (!menusData) {\n    return [];\n  }\n\n  return menusData\n    .filter((item) => {\n      let roleAuth = true;\n      // if item.roles is [] or undefined, roleAuth is true\n      if (auth && item.auth && item.auth instanceof Array) {\n        if (item.auth.length) {\n          roleAuth = item.auth.some((key) => auth[key]);\n        }\n      }\n      return item.name && !item.hideInMenu && roleAuth;\n    })\n    .map((item, index) => {\n      return getSubMenuOrItem(item, `${initIndex}-${index}`, auth);\n    });\n}\n\nfunction getSubMenuOrItem(item: IMenuItem, index?: number | string, auth?: any) {\n  if (item.children && item.children.some((child) => child.name)) {\n    const childrenItems = getNavMenuItems(item.children, index, auth);\n    if (childrenItems && childrenItems.length > 0) {\n      const subNav = (\n        <SubNav\n          key={item.name}\n          icon={item.icon}\n          label={item.name}\n        >\n          {childrenItems}\n        </SubNav>\n      );\n\n      return subNav;\n    }\n    return null;\n  }\n  const navItem = (\n    <NavItem key={item.path} icon={item.icon}>\n      <Link to={item.path}>\n        {item.name}\n      </Link>\n    </NavItem>\n  );\n\n  return navItem;\n}\n\nconst Navigation = (props, context) => {\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\n\n  const { location } = props;\n  const { pathname } = location;\n  const { isCollapse } = context;\n\n  useEffect(() => {\n    const curSubNav = asideMenuConfig.find((menuConfig) => {\n      return menuConfig.children && checkChildPathExists(menuConfig);\n    });\n\n    function checkChildPathExists(menuConfig) {\n      return menuConfig.children.some((child) => {\n        return child.children ? checkChildPathExists(child) : child.path === pathname;\n      });\n    }\n\n    if (curSubNav && !openKeys.includes(curSubNav.name)) {\n      setOpenKeys([...openKeys, curSubNav.name]);\n    }\n  }, [pathname]);\n\n  return (\n    <Nav\n      type=\"normal\"\n      openKeys={openKeys}\n      selectedKeys={[pathname]}\n      defaultSelectedKeys={[pathname]}\n      embeddable\n      activeDirection=\"right\"\n      iconOnly={isCollapse}\n      hasArrow={false}\n      mode={isCollapse ? 'popup' : 'inline'}\n      onOpen={setOpenKeys}\n    >\n      {getNavMenuItems(asideMenuConfig, 0, AUTH_CONFIG)}\n    </Nav>\n  );\n};\n\nNavigation.contextTypes = {\n  isCollapse: PropTypes.bool,\n};\n\nconst PageNav = withRouter(Navigation);\n\nexport default PageNav;\n","E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\menuConfig.ts",[],"E:\\workspace_react\\zt-tm\\src\\layouts\\UserLayout\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\locales\\en-US\\index.ts",[],"E:\\workspace_react\\zt-tm\\src\\locales\\locale.js",["561"],"function setLocale(lang) {\r\n  if (lang !== undefined && !/^([a-z]{2})-([A-Z]{2})$/.test(lang)) {\r\n    throw new Error('setLocale lang format error');\r\n  }\r\n\r\n  if (typeof window !== 'undefined' && getLocale() !== lang) {\r\n    window.localStorage.setItem('lang', lang);\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nfunction getLocale() {\r\n  if (typeof window !== 'undefined') {\r\n    if (!window.localStorage.getItem('lang')) {\r\n      window.localStorage.setItem('lang', navigator.language);\r\n    }\r\n    return localStorage.getItem('lang') || '';\r\n  }\r\n  return '';\r\n}\r\n\r\nexport { setLocale, getLocale };\r\n","E:\\workspace_react\\zt-tm\\src\\locales\\zh-CN\\index.ts",[],"E:\\workspace_react\\zt-tm\\src\\models\\user.ts",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Advanced\\components\\AdvancedDetailHead\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Advanced\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardAreaChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardAreaChart\\mock.js",["562"],"export default {\n  value: '123,456',\n  saleList: [\n    { date: 1, value: 3 },\n    { date: 2, value: 9 },\n    { date: 3, value: 5 },\n    { date: 4, value: 8 },\n    { date: 5, value: 11 },\n    { date: 6, value: 6 },\n    { date: 7, value: 8 },\n    { date: 8, value: 7 },\n  ],\n  dailySale: '¥1,234',\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardBarChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardBarChart\\mock.js",["563"],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardGroupBarChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardLineChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardLineChart\\mock.js",["564"],"export default {\n  value: '123,456',\n  saleList: [\n    { date: 1, value: 3, num: 1 },\n    { date: 2, value: 9, num: 2 },\n    { date: 3, value: 5, num: 2 },\n    { date: 4, value: 8, num: 2 },\n    { date: 5, value: 11, num: 2 },\n    { date: 6, value: 6, num: 2 },\n    { date: 7, value: 8, num: 2 },\n    { date: 8, value: 7, num: 2 },\n  ],\n  dailySale: '10',\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardPieChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardRankChart\\index.tsx",["565"],"import React from 'react';\nimport { Card, ResponsiveGrid, Box, Divider } from '@alifd/next';\n\nimport styles from './index.module.scss';\n\nconst { Cell } = ResponsiveGrid;\n\ninterface DataItem {\n  name?: string;\n  rate?: string;\n  color?: string;\n}\n\ninterface CardConfig {\n  title?: string;\n  dataSource?: DataItem[];\n}\n\nexport interface FusionCardRankChartProps {\n  cardConfig?: CardConfig;\n}\n\nconst DEFAULT_DATA: CardConfig = {\n  title: '区域销售',\n  dataSource: [\n    { name: '亚洲', rate: '40%', color: '#2B7FFB' },\n    { name: '欧洲', rate: '30%', color: '#00D6CB' },\n    { name: '南非', rate: '20%', color: '#F0C330' },\n    { name: '美洲', rate: '10%', color: '#3840D9' },\n  ],\n};\n\nconst FusionCardRankChart: React.FunctionComponent<FusionCardRankChartProps> = (props: FusionCardRankChartProps): JSX.Element => {\n  const { cardConfig = DEFAULT_DATA } = props;\n  const { title, dataSource } = cardConfig;\n  return (\n    <Card free>\n      <Card.Header title={title} />\n      <Card.Divider />\n      <Card.Content style={{ margin: 0, padding: 0 }}>\n        <ResponsiveGrid>\n          <Cell colSpan={6}>\n            <div className={styles.hisMap} />\n          </Cell>\n          <Cell colSpan={3}>\n            <Box justify=\"flex-start\" spacing={20} className={styles.histogram}>\n              {dataSource &&\n                dataSource.map((item, idx) => (\n                  <Box key={idx} justify=\"flex-start\" spacing={5}>\n                    <div className={styles.hisTitle}>{item.name}</div>\n                    <Box direction=\"row\">\n                      <div style={{ backgroundColor: item.color, width: item.rate }} />\n                      <div className={styles.hisRate}>{item.rate}</div>\n                    </Box>\n                  </Box>\n                ))}\n            </Box>\n          </Cell>\n          <Cell colSpan={3}>\n            <Box direction=\"row\" className={styles.subCard}>\n              <Divider direction=\"ver\" className={styles.subDiv} />\n              <div className={styles.subBody}>\n                <div className={styles.subName}>亚洲</div>\n                <Divider direction=\"hoz\" />\n                <Box\n                  className={styles.subMain}\n                  spacing={20}\n                  direction=\"row\"\n                  align=\"center\"\n                  justify=\"center\"\n                >\n                  <Box>\n                    <div className={styles.subTypeName}>商品类目1</div>\n                    <div className={styles.subTypeValue}>6,123</div>\n                  </Box>\n                  <Divider direction=\"ver\" className={styles.subMainDiv} />\n                  <Box>\n                    <div className={styles.subTypeName}>商品类目2</div>\n                    <div className={styles.subTypeValue}>132,4</div>\n                  </Box>\n                </Box>\n                <Box\n                  className={styles.subFooter}\n                  direction=\"column\"\n                  justify=\"center\"\n                  align=\"center\"\n                >\n                  <div>周同比</div>\n                  <div>45%↑</div>\n                </Box>\n              </div>\n            </Box>\n          </Cell>\n        </ResponsiveGrid>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default FusionCardRankChart;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardTypebarChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardTypebarChart\\mock.js",["566"],"export default {\n  value: '82,234',\n  saleList: [\n    { type: 'a', value: 3 },\n    { type: 'b', value: 9 },\n  ],\n  dailySale: '10',\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\BasicDetailPage\\components\\BasicDetail\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\BasicDetailPage\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\BasicListPage\\components\\BasicList\\index.tsx",["567"],"import React, { useState, useEffect } from 'react';\nimport { Box, Search, Card, Tag, Divider, Typography, Icon, Loading, Button, Pagination } from '@alifd/next';\n\nimport styles from './index.module.scss';\n\nconst { Group: TagGroup, Selectable: SelectableTag } = Tag;\n\nexport interface ICardItem {\n  title?: string;\n  content?: string;\n  subContent?: string;\n}\n\nexport interface DataSource {\n  cards: ICardItem[];\n  tagsA: string[];\n  tagA: string;\n  tagsB: string[];\n  tagB: string;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  tagsA: ['类目一', '类目二', '类目三', '类目四', '类目五', '类目六', '类目七', '类目八', '类目九', '类目十'],\n  tagA: '类目一',\n  tagsB: ['不到一年', '一年以上三年以下', '三年以上五年以下', '五年以上'],\n  tagB: '一年以上三年以下',\n  cards: new Array(5).fill({\n    title: '构建一套产品化设计系统',\n    content: '随着互联网行业的聚变式发展，在电商业务从“信息透出” 到 “在线交易” 的过程中，网站 UI 构建也经历了“体验一致性”、“设计效率”、“UI系统构建/应用效率”、“多端适配” …',\n    subContent: '谢瑶 3 小时前更新',\n  }),\n};\n\nconst BasicList: React.FunctionComponent<BasicListProps> = (props: BasicListProps): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSearch = (): void => { },\n  } = props;\n\n  const [tagAValue, setTagAValue] = useState(dataSource.tagA);\n  const [tagBValue, setTagBValue] = useState(dataSource.tagB);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  });\n\n  const onTagAValueChange = (v: string) => {\n    setLoading(true);\n    setTagAValue(v);\n  };\n\n  const onTagBValueChange = (v: string) => {\n    setLoading(true);\n    setTagBValue(v);\n  };\n\n  const onSearchClick = () => {\n    setLoading(true);\n    onSearch();\n  };\n\n  const onPaginationChange = () => {\n    setLoading(true);\n  };\n\n  const renderTagListA = () => {\n    return dataSource.tagsA.map((name: string) => (\n      <SelectableTag\n        key={name}\n        checked={tagAValue === name}\n        onChange={() => onTagAValueChange(name)}\n        {...props}\n      >{name}\n      </SelectableTag>\n    ));\n  };\n\n  const renderTagListB = () => {\n    return dataSource.tagsB.map((name: string) => (\n      <SelectableTag\n        key={name}\n        checked={tagBValue === name}\n        onChange={() => onTagBValueChange(name)}\n        {...props}\n      >{name}\n      </SelectableTag>\n    ));\n  };\n\n  const renderCards = () => {\n    return dataSource.cards.map((c: ICardItem, i: number) => (\n      <div className={styles.ListItem} key={i}>\n        <div className={styles.main}>\n          <div className={styles.left}>\n            <img src=\"https://shadow.elemecdn.com/app/element/list.62a82841-1bcb-11ea-a71c-17428dec1b82.png\" alt=\"img\" />\n            <div>\n              <div className={styles.title}>\n                {c.title}\n              </div>\n              <div className={styles.content}>\n                {c.content}\n              </div>\n              <div className={styles.subContent}>\n                {c.subContent}\n              </div>\n            </div>\n          </div>\n          <div className={styles.right}>\n            <Button type=\"primary\" text>编辑</Button>\n            <Button type=\"primary\" text>订阅</Button>\n            <Button type=\"primary\" text>删除</Button>\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      <Card free className={styles.BasicList}>\n        <Box align=\"center\">\n          <Search type=\"primary\" hasIcon={false} searchText=\"搜索\" onSearch={onSearchClick} />\n        </Box>\n        <Divider dashed style={{ margin: '24px 0' }} />\n        <Box className={styles.TagBox}>\n          <div className={styles.TagBoxItem}>\n            <Typography.Text className={styles.TagTitleName}>内容分类</Typography.Text>\n            <TagGroup>{renderTagListA()}</TagGroup>\n          </div>\n          <div className={styles.TagBoxItem}>\n            <Typography.Text className={styles.TagTitleName}>时间</Typography.Text>\n            <TagGroup>{renderTagListB()}</TagGroup>\n          </div>\n        </Box>\n\n        <Loading visible={loading} className={styles.MainList}>\n          <Box className={styles.MainContent} spacing={10}>\n            <div className={styles.ListItem}>\n              <div className={styles.add}>\n                <Icon type=\"add\" className={styles.icon} size=\"xs\" />\n                <div className={styles.addText}>添加内容</div>\n              </div>\n            </div>\n            {renderCards()}\n            <Box margin={[15, 0, 0, 0]} direction=\"row\" align=\"center\" justify=\"space-between\">\n              <div className={styles.total}>\n                共<span>200</span>条需求\n              </div>\n              <Pagination onChange={onPaginationChange} />\n            </Box>\n          </Box>\n        </Loading>\n      </Card>\n    </>\n  );\n};\n\nexport default BasicList;\n","E:\\workspace_react\\zt-tm\\src\\pages\\BasicListPage\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\CardListPage\\components\\CardList\\index.tsx",["568"],"import React, { useState, useEffect } from 'react';\nimport { Box, Search, Card, Tag, ResponsiveGrid, Divider, Typography, Icon, Loading } from '@alifd/next';\n\nimport styles from './index.module.scss';\n\nconst { Group: TagGroup, Selectable: SelectableTag } = Tag;\nconst { Cell } = ResponsiveGrid;\nexport interface ICardItem {\n  title?: string;\n  content?: string;\n  link?: string[];\n}\n\nexport interface DataSource {\n  cards: ICardItem[];\n  tagsA: string[];\n  tagA: string;\n  tagsB: string[];\n  tagB: string;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  tagsA: ['类目一', '类目二', '类目三', '类目四', '类目五', '类目六', '类目七', '类目八', '类目九', '类目十'],\n  tagA: '类目一',\n  tagsB: ['不到一年', '一年以上三年以下', '三年以上五年以下', '五年以上'],\n  tagB: '一年以上三年以下',\n  cards: new Array(7).fill({\n    title: '图片型卡片标题',\n    content: '图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述图片型卡片描述',\n    link: ['链接一', '链接二'],\n  }),\n};\n\nconst CardList: React.FunctionComponent<CardListProps> = (props: CardListProps): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSearch = (): void => { },\n  } = props;\n\n  const [tagAValue, setTagAValue] = useState(dataSource.tagA);\n  const [tagBValue, setTagBValue] = useState(dataSource.tagB);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  });\n\n  const onTagAValueChange = (v: string) => {\n    setLoading(true);\n    setTagAValue(v);\n  };\n\n  const onTagBValueChange = (v: string) => {\n    setLoading(true);\n    setTagBValue(v);\n  };\n\n  const onSearchClick = () => {\n    setLoading(true);\n    onSearch();\n  };\n\n  const renderTagListA = () => {\n    return dataSource.tagsA.map((name: string) => (\n      <SelectableTag\n        key={name}\n        checked={tagAValue === name}\n        onChange={() => onTagAValueChange(name)}\n        {...props}\n      >{name}\n      </SelectableTag>\n    ));\n  };\n\n  const renderTagListB = () => {\n    return dataSource.tagsB.map((name: string) => (\n      <SelectableTag\n        key={name}\n        checked={tagBValue === name}\n        onChange={() => onTagBValueChange(name)}\n        {...props}\n      >{name}\n      </SelectableTag>\n    ));\n  };\n\n  const renderCards = () => {\n    return dataSource.cards.map((c: ICardItem, i: number) => (\n      <Cell colSpan={3} className={styles.ListItem} key={i}>\n        <div className={styles.main}>\n          <img src=\"https://shadow.elemecdn.com/app/element/list.76b098b1-1732-11ea-948d-7d2ddf6d1c39.png\" alt=\"img\" />\n          <div className={styles.content}>\n            <div className={styles.title}>\n              {c.title}\n            </div>\n            <div className={styles.info}>\n              {c.content}\n            </div>\n            <div className={styles.link}>\n              <a href=\"#\">{c.link[0]}</a>\n              <a href=\"#\">{c.link[1]}</a>\n            </div>\n          </div>\n        </div>\n      </Cell>\n    ));\n  };\n\n  return (\n    <>\n      <Card free className={styles.CardList}>\n        <Box align=\"center\">\n          <Search type=\"primary\" hasIcon={false} searchText=\"搜索\" onSearch={onSearchClick} />\n        </Box>\n        <Divider dashed style={{ margin: '24px 0' }} />\n        <Box className={styles.TagBox}>\n          <div className={styles.TagBoxItem}>\n            <Typography.Text className={styles.TagTitleName}>内容分类</Typography.Text>\n            <TagGroup>{renderTagListA()}</TagGroup>\n          </div>\n          <div className={styles.TagBoxItem}>\n            <Typography.Text className={styles.TagTitleName}>时间</Typography.Text>\n            <TagGroup>{renderTagListB()}</TagGroup>\n          </div>\n        </Box>\n      </Card>\n      <Loading visible={loading} style={{ display: 'block' }}>\n        <ResponsiveGrid gap={20}>\n          <Cell colSpan={3} className={styles.ListItem}>\n            <Box className={styles.add} justify=\"center\" align=\"center\">\n              <Icon type=\"add\" className={styles.icon} />\n              <div className={styles.addText}>添加内容</div>\n            </Box>\n          </Cell>\n          {renderCards()}\n        </ResponsiveGrid>\n      </Loading>\n    </>\n  );\n};\n\nexport default CardList;\n","E:\\workspace_react\\zt-tm\\src\\pages\\CardListPage\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackFail\\components\\FailDetail\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackFail\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\components\\Forbidden\\components\\Exception\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\components\\Forbidden\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackForbidden\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\components\\NotFound\\components\\Exception\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\components\\NotFound\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackNotFound\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\components\\ServerError\\components\\Exception\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\components\\ServerError\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackServerError\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\components\\SuccessDetail\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\components\\SuccessDetail\\utils.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FeedbackSuccess\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FlowGroup\\components\\FlowForm\\index.tsx",["569"],"import React, { SFC, useEffect, useState, useRef } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Box, Card, Button, Form, Input, Select, Radio, Step, Field, Divider, Tag, Avatar, Typography, ResponsiveGrid } from '@alifd/next';\nimport styles from './index.module.scss';\n\nexport interface Experience {\n  company?: string;\n  position?: string;\n  region?: string;\n  description?: string;\n  salary?: string;\n  time?: number;\n  allowance?: string;\n  rsu?: boolean;\n}\n\nexport interface Approval {\n  approverId?: number;\n  signatureId?: number;\n  assessmentType?: number;\n  feedback?: string;\n}\n\nexport interface DataSource {\n  approval?: Approval;\n  person?: {\n    avatar?: string;\n    surname?: string;\n    name?: string;\n    phone?: string;\n    email?: string;\n    region?: string;\n    address?: string;\n    workTime?: number;\n    education?: string;\n    rank?: string;\n    position?: string;\n    department?: string;\n    workAddress?: string;\n    salary?: string;\n    experiences?: Experience[];\n  };\n}\n\nexport interface FlowFormProps {\n  dataSource?: DataSource;\n  footerLeft?: number;\n  footerRight?: number;\n  onAgree?: (data: Approval) => void;\n  onRefuse?: () => void;\n  onTransfer?: () => void;\n  onSignature?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  approval: {\n    approverId: 1,\n    assessmentType: 1,\n  },\n  person: {\n    avatar: 'https://img.alicdn.com/tfs/TB1WpoDouH2gK0jSZJnXXaT1FXa-1072-1608.jpg',\n    surname: '谢',\n    name: '莉莉',\n    phone: '13676349585',\n    email: 'Xielili@aliwork-inc.com',\n    region: '中国/浙江',\n    address: '杭州',\n    workTime: 3,\n    education: 'Singapore University of Technology and Design',\n    rank: 'P10',\n    position: 'Senior Director',\n    department: 'aliwork&EHR',\n    workAddress: '杭州',\n    salary: '20,000',\n    experiences: [{\n      company: '浙江杭州天猫有限公司',\n      position: '高级研发专家',\n      region: '中国/浙江',\n      description: 'Fusion 是一套企业级中后台设计系统解决方案，致力于解决产品体验一致性问题、设计研发协同问题，以及UI开发效率问题。',\n      salary: '20,000 USD',\n      time: 13,\n      allowance: '5,000 USD',\n      rsu: false,\n    }],\n  },\n};\n\nconst FlowForm: SFC<FlowFormProps> = (props) => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onAgree = () => {},\n    onRefuse = () => {},\n    onTransfer = () => {},\n    onSignature = () => {},\n  } = props;\n\n  const field = Field.useField({\n    values: dataSource.approval,\n  });\n\n  const containerRef = useRef(null);\n  const [left, setLeft] = useState(0);\n  const [right, setRight] = useState(0);\n\n  useEffect(() => {\n    // eslint-disable-next-line react/no-find-dom-node\n    const dom = findDOMNode(containerRef.current) as HTMLDivElement;\n    const rect = (dom && dom.getBoundingClientRect()) || {};\n    setLeft(rect.left);\n    setRight(document.documentElement.offsetWidth - rect.left - rect.width);\n  }, []);\n\n  return (\n    <Box ref={containerRef} spacing={20} className={styles.FlowForm}>\n      <Card free>\n        <Card.Content>\n          <Step shape=\"dot\" current={1}>\n            <Step.Item key={0} title=\"申请\" />\n            <Step.Item key={1} title=\"审批\" content=\"李强\" />\n            <Step.Item key={2} title=\"接受\" />\n            <Step.Item key={3} title=\"合同发送\" />\n            <Step.Item key={4} title=\"合同接受\" />\n            <Step.Item key={5} title=\"入职准备\" />\n            <Step.Item key={6} title=\"完成\" />\n          </Step>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Header title=\"审批信息\" />\n        <Card.Divider />\n        <Card.Content>\n          <Form labelAlign=\"top\" fullWidth field={field} responsive>\n            <Form.Item label=\"审批人\" colSpan={4} required>\n              <Select name=\"approverId\" placeholder=\"请选择审批人\">\n                <Select.Option value={1}>李强</Select.Option>\n                <Select.Option value={2}>张三</Select.Option>\n                <Select.Option value={3}>李四</Select.Option>\n                <Select.Option value={4}>王五</Select.Option>\n                <Select.Option value={5}>阮小二</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"加签人\" colSpan={4}>\n              <Select name=\"signatureId\" placeholder=\"请选择加签人\">\n                <Select.Option value={1}>李强</Select.Option>\n                <Select.Option value={2}>张三</Select.Option>\n                <Select.Option value={3}>李四</Select.Option>\n                <Select.Option value={4}>王五</Select.Option>\n                <Select.Option value={5}>阮小二</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"评估方式\" colSpan={4}>\n              <Radio.Group name=\"assessmentType\">\n                <Radio value={1}>已电面</Radio>\n                <Radio value={2}>未电面</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item label=\"意见&反馈\" colSpan={8}>\n              <Input.TextArea maxLength={500} hasLimitHint placeholder=\"请输入描述\" />\n            </Form.Item>\n          </Form>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Header title=\"候选人信息\" />\n        <Card.Divider />\n        <Card.Content>\n          <ResponsiveGrid>\n            <ResponsiveGrid.Cell colSpan={6}>\n              <Box spacing={16} direction=\"row\" align=\"flex-start\">\n                <Box padding={[9, 0, 0, 0]}>\n                  <Avatar src={dataSource.person.avatar} />\n                </Box>\n                <Box spacing={10}>\n                  <Form labelAlign=\"top\" responsive>\n                    <Form.Item label={`${dataSource.person.surname}${dataSource.person.name}`} colSpan={12}>\n                      <span className=\"next-form-preview\">{dataSource.person.phone} | {dataSource.person.email}</span>\n                    </Form.Item>\n                    <Form.Item label=\"现在所在地\" colSpan={6}>\n                      <span className=\"next-form-preview\">{dataSource.person.address}</span>\n                    </Form.Item>\n                    <Form.Item label=\"工作经验\" colSpan={6}>\n                      <span className=\"next-form-preview\">{dataSource.person.workTime}</span>\n                    </Form.Item>\n                    <Form.Item label=\"教育经历\" colSpan={6}>\n                      <span className=\"next-form-preview\">{dataSource.person.education}</span>\n                    </Form.Item>\n                  </Form>\n                </Box>\n              </Box>\n            </ResponsiveGrid.Cell>\n            <ResponsiveGrid.Cell colSpan={6} style={{ position: 'relative' }}>\n              <Divider className={styles.Divider} direction=\"ver\" />\n              <Form labelAlign=\"top\" responsive>\n                <Form.Item label=\"职级\" colSpan={6}>\n                  <span className=\"next-form-preview\">{dataSource.person.rank}</span>\n                </Form.Item>\n                <Form.Item label=\"职位\" colSpan={6}>\n                  <span className=\"next-form-preview\">{dataSource.person.position}</span>\n                </Form.Item>\n                <Form.Item label=\"部门\" colSpan={6}>\n                  <span className=\"next-form-preview\">{dataSource.person.department}</span>\n                </Form.Item>\n                <Form.Item label=\"工作地\" colSpan={6}>\n                  <span className=\"next-form-preview\">{dataSource.person.workAddress}</span>\n                </Form.Item>\n                <Form.Item label=\"薪水\" colSpan={6}>\n                  <Box direction=\"row\" spacing={8} align=\"center\" className=\"next-form-preview\">\n                    {dataSource.person.salary} <Tag color=\"green\">+23.2%</Tag>\n                  </Box>\n                </Form.Item>\n              </Form>\n            </ResponsiveGrid.Cell>\n          </ResponsiveGrid>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Header title=\"基础信息\" />\n        <Card.Divider />\n        <Card.Content>\n          <Form labelAlign=\"top\" responsive>\n            <Form.Item label=\"姓氏\" required colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.surname}</span>\n            </Form.Item>\n            <Form.Item label=\"名字\" required colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.name}</span>\n            </Form.Item>\n            <Form.Item label=\"国家/地区\" colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.region}</span>\n            </Form.Item>\n            <Form.Item label=\"电话号码\" required colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.phone}</span>\n            </Form.Item>\n            <Form.Item label=\"邮箱\" required colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.email}</span>\n            </Form.Item>\n            <Form.Item label=\"现居地址\" required colSpan={4}>\n              <span className=\"next-form-preview\">{dataSource.person.address}</span>\n            </Form.Item>\n          </Form>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Header title=\"工作经历\" />\n        <Card.Divider />\n        {\n          dataSource.person.experiences.map((experience, idx) => (\n            <Card.Content key={idx}>\n              <Box>\n                <Typography.Text className={styles.SubTitle}>公司信息</Typography.Text>\n                <Form labelAlign=\"top\" responsive>\n                  <Form.Item label=\"工作单位\" required colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.company}</span>\n                  </Form.Item>\n                  <Form.Item label=\"职位\" required colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.position}</span>\n                  </Form.Item>\n                  <Form.Item label=\"国家/地区\" colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.region}</span>\n                  </Form.Item>\n                  <Form.Item label=\"职责描述\" required colSpan={8}>\n                    <span className=\"next-form-preview\">{experience.description}</span>\n                  </Form.Item>\n                </Form>\n              </Box>\n              <Divider dashed />\n              <Box>\n                <Typography.Text className={styles.SubTitle}>待遇信息</Typography.Text>\n                <Form labelAlign=\"top\" responsive>\n                  <Form.Item label=\"月薪\" colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.salary}</span>\n                  </Form.Item>\n                  <Form.Item label=\"月数\" colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.time}</span>\n                  </Form.Item>\n                  <Form.Item label=\"国家/地区\" colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.region}</span>\n                  </Form.Item>\n                  <Form.Item label=\"Options/RSU\" colSpan={4}>\n                    <span className=\"next-form-preview\">{experience.rsu ? 'Yes' : 'No'}</span>\n                  </Form.Item>\n                </Form>\n              </Box>\n            </Card.Content>\n          ))\n        }\n      </Card>\n      <div>\n        <Box direction=\"row\" spacing={8} align=\"center\" justify=\"center\" style={{ left, right }} className={styles.FlowFormFooter}>\n          <Button onClick={() => onAgree(field.getValues())} type=\"primary\">同意</Button>\n          <Button onClick={onRefuse} type=\"secondary\">拒绝</Button>\n          <Button onClick={onTransfer} type=\"secondary\">转移</Button>\n          <Button onClick={onSignature} type=\"secondary\">加签</Button>\n        </Box>\n      </div>\n    </Box>\n  );\n};\n\nexport default FlowForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FlowGroup\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormBasic\\components\\BasicForm\\index.tsx",["570","571"],"import React, { useState } from 'react';\nimport { Input, Form, Box, Button, Card, DatePicker, Message, Radio, Upload } from '@alifd/next';\n\nimport { UploadProps } from '@alifd/next/types/upload';\nimport { Moment } from 'moment';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  colSpan: 12,\n};\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  date?: Moment[];\n  type?: string;\n  pic?: UploadProps[];\n  desc?: string;\n}\n\nexport interface BasicFormProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  type: 'private',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: BasicFormProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('提交成功');\n};\n\nconst BasicForm: React.SFC<BasicFormProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n    onCancel = () => { },\n  } = props;\n\n  const [postData, setValue] = useState<BasicFormProps>(dataSource);\n\n  const formChange = (values: BasicFormProps): void => {\n    setValue(values);\n  };\n\n  return (\n    <Card free>\n      <Card.Content>\n        <Form\n          className={styles.BasicForm}\n          responsive\n          fullWidth\n          value={postData}\n          labelAlign=\"top\"\n          onChange={formChange}\n        >\n          <FormItem {...formItemLayout} label=\"项目名称：\" required requiredMessage=\"必填\">\n            <Input placeholder=\"请输入项目名称\" name=\"name\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目所属分类：\" required requiredMessage=\"必填\">\n            <Input placeholder=\"请输入你的分类\" name=\"category\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"可访问日期：\" required requiredMessage=\"必填\">\n            <DatePicker.RangePicker name=\"date\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目权限：\" >\n            <Radio.Group name=\"type\" aria-labelledby=\"authority of project\">\n              <Radio id=\"private\" value=\"private\">私密项目</Radio>\n              <Radio id=\"internal\" value=\"internal\">内部项目</Radio>\n              <Radio id=\"publish\" value=\"publish\">开放目</Radio>\n            </Radio.Group>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"上传封面：\" >\n            <Upload shape=\"card\" name=\"pic\">上传图片</Upload>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目描述：\" >\n            <Input.TextArea placeholder=\"请输入项目详细信息\" name=\"desc\" />\n          </FormItem>\n\n          <FormItem colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit\n                type=\"primary\"\n                onClick={onSubmit}\n                validate\n              >提交\n              </Form.Submit>\n              <Button onClick={onCancel} type=\"secondary\">取消</Button>\n            </Box>\n          </FormItem>\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default BasicForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormBasic\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormClassified\\components\\ClassifiedForm\\index.tsx",["572","573"],"import React, { SFC } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  Form,\n  Input,\n  Select,\n  Radio,\n  Field,\n  Divider,\n  Message,\n} from '@alifd/next';\nimport styles from './index.module.scss';\n\nexport interface DataSource {\n  job: {\n    address?: string;\n    position?: string;\n    companyName?: string;\n    currency?: string;\n    annualSalary?: number;\n    expectAnnualSalary?: number;\n  };\n  treatment: {\n    monthlySalary?: number;\n    monthNumber?: number;\n    bonus?: number;\n    targetBonus?: number;\n    lastYearBonus?: number;\n    rsu?: boolean;\n    rsuDesc?: string;\n  };\n}\n\nexport interface ClassifiedFormProps {\n  dataSource?: DataSource;\n  onSubmit?: (data: DataSource) => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  job: {\n    address: '美国 洛杉矶',\n  },\n  treatment: {\n    rsu: true,\n  },\n};\n\nconst ClassifiedForm: SFC<ClassifiedFormProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = () => {},\n    onCancel = () => {},\n  } = props;\n\n  const jobField = Field.useField({ values: dataSource.job });\n  const treatmentField = Field.useField({ values: dataSource.treatment });\n\n  const handleSubmit = async () => {\n    const { errors: jobErrors } = await jobField.validatePromise();\n    const { errors: treatmentErrors } = await treatmentField.validatePromise();\n\n    if (treatmentErrors || jobErrors) {\n      console.log('errors', jobErrors, treatmentErrors);\n      return;\n    }\n    const values = {\n      basic: jobField.getValues(),\n      member: treatmentField.getValues(),\n    };\n    console.log('values:', values);\n    onSubmit(values);\n    Message.success('提交成功');\n  };\n\n  return (\n    <div className={styles.ClassifiedForm}>\n      <Card free className={styles.Card}>\n        <Card.Header title=\"工作经历\" />\n        <Card.Divider />\n        <Card.BulletHeader title=\"分类信息\" />\n        <Card.Content>\n          <Form field={jobField} responsive fullWidth labelAlign=\"top\">\n            <Form.Item colSpan={4} label=\"工作地址\">\n              <Input name=\"address\" placeholder=\"请输入工作地址\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"职位\">\n              <Input name=\"position\" placeholder=\"请输入职位名称\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"公司名称\">\n              <Input name=\"companyName\" placeholder=\"请输入公司名称\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"币种\" required>\n              <Select name=\"currency\" placeholder=\"请选择币种\">\n                <Select.Option value=\"CNY\">¥ CNY</Select.Option>\n                <Select.Option value=\"USD\">$ USD</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"年薪\" required>\n              <Input name=\"annualSalary\" placeholder=\"请输入薪资信息\" addonTextAfter=\"CNY\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"期望年薪\">\n              <Input name=\"expectAnnualSalary\" placeholder=\"请输入期望薪资\" addonTextAfter=\"CNY\" />\n            </Form.Item>\n          </Form>\n        </Card.Content>\n\n        <Card.BulletHeader title=\"分类信息\" />\n        <Card.Content>\n          <Form field={treatmentField} responsive fullWidth labelAlign=\"top\">\n            <Form.Item colSpan={4} label=\"月薪\" required>\n              <Input name=\"monthlySalary\" placeholder=\"请输入月薪\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"月数\">\n              <Input name=\"monthNumber\" placeholder=\"请输入在职月数\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"津贴\">\n              <Input name=\"bonus\" placeholder=\"请输入津贴\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"年度目标奖金\">\n              <Input name=\"targetBonus\" placeholder=\"请输入年度目标奖金\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"去年实际奖金\">\n              <Input name=\"lastYearBonus\" placeholder=\"请输入实际奖金\" />\n            </Form.Item>\n            <Form.Item colSpan={4} label=\"选项/RSU\">\n              <Radio.Group name=\"rsu\" aria-labelledby=\"rsu\">\n                <Radio id=\"has-rsu\" value>是</Radio>\n                <Radio id=\"has-not-rsu\" value={false}>否</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item colSpan={8} label=\"选项/RSU 描述\">\n              <Input.TextArea name=\"rsuDesc\" placeholder=\"请输入\" hasLimitHint maxLength={500} />\n            </Form.Item>\n          </Form>\n          <Divider />\n          <Form.Item colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit\n                type=\"primary\"\n                onClick={handleSubmit}\n                validate\n              >提交\n              </Form.Submit>\n              <Button onClick={onCancel} type=\"secondary\">取消</Button>\n            </Box>\n          </Form.Item>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default ClassifiedForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormClassified\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormFour\\components\\FourColumnForm\\index.tsx",["574","575"],"import React, { useState } from 'react';\nimport { Input, Box, Button, Select, Form, Card, DatePicker, Message, Radio } from '@alifd/next';\n\nimport { Moment } from 'moment';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  colSpan: 3,\n};\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  date?: [Moment, Moment];\n  type?: string;\n  person?: string;\n  state?: string;\n  relative?: string;\n  relaventProject?: string;\n}\n\nexport interface FourColumnFormProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  type: 'private',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: FourColumnFormProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('提交成功');\n};\n\nconst FourColumnForm: React.SFC<FourColumnFormProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n    onCancel = () => {},\n  } = props;\n\n  const [postData, setValue] = useState<FourColumnFormProps>(dataSource);\n\n  const formChange = (value: FourColumnFormProps) => {\n    setValue(value);\n  };\n\n  return (\n    <Card free className={styles.FourColumnForm}>\n      <Card.Content>\n        <Form\n          responsive\n          fullWidth\n          value={postData}\n          labelAlign=\"top\"\n          onChange={formChange}\n        >\n          <FormItem {...formItemLayout} label=\"项目名称：\" required >\n            <Input placeholder=\"请输入项目名称\" name=\"name\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目所属分类：\" required >\n            <Input placeholder=\"请输入你的分类\" name=\"category\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"申请人：\" required >\n            <Input placeholder=\"申请人\" name=\"person\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目权限：\" >\n            <Radio.Group name=\"type\" aria-labelledby=\"authority of project\">\n              <Radio id=\"private\" value=\"private\">私密项目</Radio>\n              <Radio id=\"internal\" value=\"internal\">内部项目</Radio>\n              <Radio id=\"publish\" value=\"publish\">开放目</Radio>\n            </Radio.Group>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"状态：\" required>\n            <Select name=\"state\" aria-labelledby=\"state of project\">\n              <Select.Option id=\"step1\" value=\"step1\">阶段一</Select.Option>\n              <Select.Option id=\"step2\" value=\"step2\">阶段二</Select.Option>\n              <Select.Option id=\"step3\" value=\"step3\">阶段三</Select.Option>\n            </Select>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"联系人：\" required >\n            <Input placeholder=\"请输入联系人\" name=\"relative\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"关联项目：\" required >\n            <Input placeholder=\"请输入关联项目\" name=\"relaventProject\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"申请日期：\" required >\n            <DatePicker.RangePicker name=\"date\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号1：\" >\n            <Input placeholder=\"请输入\" name=\"data1\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号2：\" >\n            <Input placeholder=\"请输入\" name=\"data2\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号3：\" >\n            <Input placeholder=\"请输入\" name=\"data3\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号4：\" >\n            <Input placeholder=\"请输入\" name=\"data4\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号5：\" >\n            <Input placeholder=\"请输入\" name=\"data5\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号6：\" >\n            <Input placeholder=\"请输入\" name=\"data6\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号7：\" >\n            <Input placeholder=\"请输入\" name=\"data7\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目编号8：\" >\n            <Input placeholder=\"请输入\" name=\"data8\" />\n          </FormItem>\n\n          <FormItem colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit\n                type=\"primary\"\n                onClick={onSubmit}\n                validate\n              >提交\n              </Form.Submit>\n              <Button onClick={onCancel} type=\"secondary\">取消</Button>\n            </Box>\n          </FormItem>\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default FourColumnForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormFour\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormGroup\\components\\GroupForm\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormGroup\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormHierarchical\\components\\HierarchicalForm\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormHierarchical\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormStep\\components\\StepForm\\index.tsx",["576","577","578"],"import React, { useState } from 'react';\nimport { Card, Form, Input, Icon, Radio, Field, Step, Button, Box, Typography } from '@alifd/next';\n\nimport { Item } from '@alifd/next/types/step';\n\nimport styles from './index.module.scss';\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  authority?: string;\n  desc?: string;\n}\n\nexport interface StepFormProps {\n  dataSource?: DataSource;\n  onSubmit?: (data: DataSource) => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  name: '',\n  category: '',\n  authority: 'private',\n  desc: '',\n};\n\nconst StepForm: React.FunctionComponent<StepFormProps> = (props: StepFormProps): JSX.Element => {\n  const { dataSource = DEFAULT_DATA, onSubmit = (): void => {} } = props;\n\n  const projectField = Field.useField({ values: dataSource });\n  const [currentStep, setStep] = useState<number>(0);\n\n  const steps = ['填写信息', '确认信息', '完成'].map(\n    (item, index): Item => (\n      <Step.Item aria-current={index === currentStep ? 'step' : null} key={index} title={item} />\n    ),\n  );\n\n  const submit = (): void => {\n    const values = projectField.getValues();\n    console.log('values:', values);\n    onSubmit(values);\n\n    setStep(currentStep + 1);\n  };\n\n  const goNext = async (): Promise<T> => {\n    const { errors } = await projectField.validatePromise();\n\n    if (errors) {\n      console.log('errors', errors);\n      return;\n    }\n    setStep(currentStep + 1);\n  };\n\n  const goPrev = (): void => {\n    setStep(currentStep - 1);\n  };\n\n  const goInitial = (): void => {\n    setStep(0);\n  };\n\n  let actions: JSX.Element;\n  let mainbody: JSX.Element;\n  switch (currentStep) {\n    case 0:\n      actions = (\n        <Button type=\"primary\" onClick={goNext}>\n          下一步\n        </Button>\n      );\n      break;\n    case 1:\n      actions = (\n        <>\n          <Button onClick={goPrev} style={{ marginRight: '5px' }}>\n            上一步\n          </Button>\n          <Form.Submit type=\"primary\" onClick={submit} validate>\n            下一步\n          </Form.Submit>\n        </>\n      );\n      break;\n    case 2:\n      mainbody = (\n        <>\n          <Box align=\"center\">\n            <Icon type=\"success-filling\" size={72} className={styles.succesIcon} />\n            <Typography.H1>提交成功</Typography.H1>\n            <Typography.Text>5s 后自动跳转至工单页</Typography.Text>\n            <Box margin={20} direction=\"row\">\n              <Button type=\"primary\" style={{ marginRight: '5px' }} onClick={goInitial}>\n                返回主页\n              </Button>\n              <Button onClick={goInitial}>继续创建</Button>\n            </Box>\n          </Box>\n        </>\n      );\n      break;\n    default:\n      break;\n  }\n\n  if (!mainbody) {\n    mainbody = (\n      <>\n        <Form\n          field={projectField}\n          isPreview={currentStep === 1}\n          className={styles.form}\n          responsive\n          fullWidth\n          labelAlign=\"top\"\n        >\n          <Form.Item colSpan={12} label=\"项目名称\" required requiredMessage=\"必填\">\n            <Input placeholder=\"给项目起个名字\" name=\"name\" />\n          </Form.Item>\n\n          <Form.Item colSpan={12} label=\"项目所属分类\" required>\n            <Input placeholder=\"请输入你的分类\" name=\"category\" />\n          </Form.Item>\n\n          <Form.Item colSpan={12} label=\"项目权限\">\n            <Radio.Group name=\"authority\" aria-labelledby=\"authority of project\">\n              <Radio id=\"private\" value=\"private\">\n                私密项目\n              </Radio>\n              <Radio id=\"internal\" value=\"internal\">\n                内部项目\n              </Radio>\n              <Radio id=\"publish\" value=\"publish\">\n                开放目\n              </Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item colSpan={12} label=\"项目描述\">\n            <Input.TextArea placeholder=\"请输入项目详细信息\" name=\"desc\" />\n          </Form.Item>\n\n          <Form.Item colSpan={12}>{actions}</Form.Item>\n        </Form>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <Card free>\n        <Card.Content className={styles.StepForm}>\n          <Step current={currentStep} shape=\"circle\">\n            {steps}\n          </Step>\n          {mainbody}\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default StepForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormStep\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormThree\\components\\ThreeColumnForm\\index.tsx",["579","580"],"import React, { useState } from 'react';\nimport { Input, Box, Button, Select, Form, DatePicker, Message, Radio, Upload, Card } from '@alifd/next';\n\nimport { UploadProps } from '@alifd/next/types/upload';\nimport { Moment } from 'moment';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  colSpan: 4,\n};\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  date?: [Moment, Moment];\n  type?: string;\n  pic?: UploadProps[];\n  desc?: string;\n  person?: string;\n  state?: string;\n}\n\nexport interface ThreeColumnFormProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  type: 'private',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: ThreeColumnFormProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('提交成功');\n};\n\nconst ThreeColumnForm: React.SFC<ThreeColumnFormProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n    onCancel = () => { },\n  } = props;\n\n  const [postData, setValue] = useState<ThreeColumnFormProps>(dataSource);\n\n  const formChange = (value: ThreeColumnFormProps) => {\n    setValue(value);\n  };\n\n  return (\n    <Card free className={styles.ThreeColumnForm}>\n      <Card.Content>\n        <Form\n          responsive\n          fullWidth\n          value={postData}\n          labelAlign=\"top\"\n          onChange={formChange}\n        >\n          <FormItem {...formItemLayout} label=\"项目名称：\" required >\n            <Input placeholder=\"请输入项目名称\" name=\"name\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目所属分类：\" required >\n            <Input placeholder=\"请输入你的分类\" name=\"category\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"申请日期：\" required >\n            <DatePicker.RangePicker name=\"date\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"申请人：\" required >\n            <Input placeholder=\"申请人\" name=\"person\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"状态：\" required>\n            <Select name=\"state\" aria-labelledby=\"state of project\">\n              <Select.Option id=\"step1\" value=\"step1\">阶段一</Select.Option>\n              <Select.Option id=\"step2\" value=\"step2\">阶段二</Select.Option>\n              <Select.Option id=\"step3\" value=\"step3\">阶段三</Select.Option>\n            </Select>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目权限：\" >\n            <Radio.Group name=\"type\" aria-labelledby=\"authority of project\">\n              <Radio id=\"private\" value=\"private\">私密项目</Radio>\n              <Radio id=\"internal\" value=\"internal\">内部项目</Radio>\n              <Radio id=\"publish\" value=\"publish\">开放目</Radio>\n            </Radio.Group>\n          </FormItem>\n\n          <FormItem {...formItemLayout} colSpan={8} label=\"项目描述：\" >\n            <Input.TextArea placeholder=\"请输入项目详细信息\" name=\"desc\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} colSpan={12} help=\"请选择大小不超过5M的文件，支持doc，docx，xls，xlsx，zip格式\">\n            <Upload name=\"pic\" action=\"https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload\">\n              <Button type=\"normal\" style={{ margin: '0 0 10px' }}>上传文件</Button>\n            </Upload>\n          </FormItem>\n\n          <FormItem colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit\n                type=\"primary\"\n                onClick={onSubmit}\n                validate\n              >提交\n              </Form.Submit>\n              <Button onClick={onCancel} type=\"secondary\">取消</Button>\n            </Box>\n          </FormItem>\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ThreeColumnForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormThree\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FormTwo\\components\\TwoColumnForm\\index.tsx",["581","582"],"import React, { useState } from 'react';\nimport { Input, Box, Button, Form, Card, DatePicker, Message, Radio, Upload } from '@alifd/next';\n\nimport { UploadProps } from '@alifd/next/types/upload';\nimport { Moment } from 'moment';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n  colSpan: 6,\n};\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  date?: Moment[];\n  type?: string;\n  pic?: UploadProps[];\n  desc?: string;\n}\n\nexport interface TwoColumnFormProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  type: 'private',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: TwoColumnFormProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('提交成功');\n};\n\nconst TwoColumnForm: React.SFC<TwoColumnFormProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n    onCancel = () => {},\n  } = props;\n\n  const [postData, setValue] = useState<TwoColumnFormProps>(dataSource);\n\n  const formChange = (value: TwoColumnFormProps): void => {\n    setValue(value);\n  };\n\n  return (\n    <Card free className={styles.TwoColumnForm}>\n      <Card.Content>\n        <Form\n          responsive\n          fullWidth\n          value={postData}\n          labelAlign=\"top\"\n          onChange={formChange}\n        >\n          <FormItem {...formItemLayout} label=\"项目名称：\" required >\n            <Input placeholder=\"请输入项目名称\" name=\"name\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目所属分类：\" required >\n            <Input placeholder=\"请输入你的分类\" name=\"category\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"可访问日期：\" required >\n            <DatePicker.RangePicker name=\"date\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"项目权限：\" >\n            <Radio.Group name=\"type\" aria-labelledby=\"authority of project\">\n              <Radio id=\"private\" value=\"private\">私密项目</Radio>\n              <Radio id=\"internal\" value=\"internal\">内部项目</Radio>\n              <Radio id=\"publish\" value=\"publish\">开放目</Radio>\n            </Radio.Group>\n          </FormItem>\n\n          <FormItem {...formItemLayout} colSpan={12} label=\"项目描述：\" >\n            <Input.TextArea placeholder=\"请输入项目详细信息\" name=\"desc\" />\n          </FormItem>\n\n          <FormItem {...formItemLayout} colSpan={12} help=\"请选择大小不超过5M的文件，支持doc，docx，xls，xlsx，zip格式\">\n            <Upload name=\"pic\" action=\"https://www.easy-mock.com/mock/5b713974309d0d7d107a74a3/alifd/upload\">\n              <Button type=\"normal\" style={{ margin: '0 0 10px' }}>上传文件</Button>\n            </Upload>\n          </FormItem>\n\n          <FormItem colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit\n                type=\"primary\"\n                onClick={onSubmit}\n                validate\n              >提交\n              </Form.Submit>\n              <Button onClick={onCancel} type=\"secondary\">取消</Button>\n            </Box>\n          </FormItem>\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default TwoColumnForm;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FormTwo\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\CustomList.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\index.tsx",["583","584"],"import React, { useState } from 'react';\nimport { Card, Table, Button, Icon, Pagination, Message } from '@alifd/next';\nimport { TableProps } from '@alifd/next/lib/table';\nimport { useFusionTable, useFullscreen } from 'ahooks';\n\nimport CustomList, { Column } from './CustomList';\nimport { getColumnKey } from './util';\n\nimport styles from './index.module.scss';\n\nconst TableActionIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1899388_oxn3zhg34oj.js',\n});\n\nconst getTableData = ({ current, pageSize }: { current: number; pageSize: number }): Promise<any> => {\n  const query = `page=${current}&size=${pageSize}`;\n  return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n    .then(res => res.json())\n    .then(res => ({\n      total: 55,\n      list: res.results.slice(0, 10),\n    }));\n};\n\n// 根据 hidden 切换当前 column 是否显示\nconst filterColumns = (columnList: Column[]) => {\n  const newColumnList = [...columnList];\n  return newColumnList\n    .filter((columnItem) => {\n      if (columnItem.hidden) {\n        return false;\n      }\n      return true;\n    })\n    .map((columnItem) => {\n      if (columnItem.children) {\n        const groupProps = { ...columnItem };\n        delete groupProps.children;\n\n        return (\n          <Table.ColumnGroup key={getColumnKey(columnItem)} {...groupProps}>\n            {filterColumns(columnItem.children)}\n          </Table.ColumnGroup>\n        );\n      }\n\n      return <Table.Column key={getColumnKey(columnItem)} {...columnItem} />;\n    });\n};\n\nconst defaultColumns: Column[] = [\n  {\n    id: '1',\n    title: '名称',\n    children: [\n      {\n        id: '1-1',\n        title: '前缀',\n        dataIndex: 'name.title',\n      },\n      {\n        id: '1-2',\n        title: '名',\n        dataIndex: 'name.first',\n      },\n      {\n        id: '1-3',\n        title: '姓',\n        dataIndex: 'name.last',\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Email',\n    dataIndex: 'email',\n  },\n  {\n    id: '3',\n    title: '电话号码',\n    dataIndex: 'phone',\n  },\n  {\n    id: '4',\n    title: '性别',\n    dataIndex: 'gender',\n  },\n];\n\nconst AppList = () => {\n  // 切换紧凑模式\n  const [sizeStatus, changeSize] = useState<TableProps['size']>('medium');\n  const autoChangeSize = () => {\n    if (sizeStatus === 'medium') {\n      changeSize('small');\n    } else {\n      changeSize('medium');\n    }\n  };\n\n  // 切换 zebra\n  const [zebraStatus, changeZebra] = useState(false);\n\n  // 切换全屏\n  const [, { toggleFull }] = useFullscreen(document.getElementById('table-container'), {\n    onFull: () => {\n      const ele = document.getElementById('table-container');\n      ele.setAttribute('style', 'padding: 20px;background: #ffffff');\n    },\n  });\n\n  // 获取表格数据\n  const { paginationProps, tableProps } = useFusionTable(getTableData, {});\n\n  // 切换当前 columns\n  const [columns, onColumnChange] = useState<Column[]>(defaultColumns);\n\n  return (\n    <Card free className={styles.container} id=\"table-container\">\n      <Card.Content>\n        <div className={styles.actionBar}>\n          <div className={styles.buttonGroup}>\n            <Button type=\"primary\" onClick={() => Message.success('已批量处理xx条数据')}>\n              批量提交\n            </Button>\n            <Button onClick={() => Message.success('已批量处理xx条数据')}>批量删除</Button>\n            <Button onClick={() => Message.success('已批量处理xx条数据')}>批量下载</Button>\n          </div>\n          <div className={styles.rightButtonGroup}>\n            <Button text onClick={autoChangeSize}>\n              <TableActionIcon type=\"narrow\" size=\"small\" />\n            </Button>\n            <Button text onClick={() => changeZebra(!zebraStatus)}>\n              <TableActionIcon type=\"zebra\" size=\"small\" />\n            </Button>\n            <Button text onClick={toggleFull}>\n              <TableActionIcon type=\"fullscreen\" size=\"small\" />\n            </Button>\n            <CustomList columns={columns} onChange={onColumnChange} />\n          </div>\n        </div>\n        <Table {...tableProps} size={sizeStatus} isZebra={zebraStatus} primaryKey=\"id.value\">\n          {filterColumns(columns)}\n        </Table>\n        <Pagination\n          style={{ marginTop: 16, textAlign: 'right' }}\n          totalRender={(total) => (\n            <>\n              共{' '}\n              <Button text type=\"primary\">\n                {total}\n              </Button>{' '}\n              个记录\n            </>\n          )}\n          {...paginationProps}\n        />\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default AppList;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\components\\ActionTable\\util.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionActionTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\DialogOperation.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\EmptyBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\ExceptionBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\index.tsx",["585","586","587"],"import React, { useCallback } from 'react';\nimport { Button, Field, Table, Card, Pagination, Message, Dialog } from '@alifd/next';\nimport { useFusionTable, useSetState } from 'ahooks';\n\nimport EmptyBlock from './EmptyBlock';\nimport ExceptionBlock from './ExceptionBlock';\nimport DialogOperation from './DialogOperation';\nimport { ActionType, OperaitionProps } from './Operation';\n\nimport styles from './index.module.scss';\n\nconst getTableData = (\n  { current, pageSize }: { current: number; pageSize: number },\n  formData: { status: 'normal' | 'empty' | 'exception' },\n): Promise<any> => {\n  if (!formData.status || formData.status === 'normal') {\n    let query = `page=${current}&size=${pageSize}`;\n    Object.entries(formData).forEach(([key, value]) => {\n      if (value) {\n        query += `&${key}=${value}`;\n      }\n    });\n    return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n      .then(res => res.json())\n      .then(res => ({\n        total: 55,\n        list: res.results.slice(0, 10),\n      }));\n  }\n  if (formData.status === 'empty') {\n    return Promise.resolve([]);\n  }\n  if (formData.status === 'exception') {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('data exception'));\n      }, 1000);\n    });\n  }\n\n  return Promise.resolve([]);\n};\n\ninterface ColumnWidth {\n  name: number;\n  email: number;\n  phone: number;\n  gender: number;\n  operation: number;\n}\n\ninterface DialogState {\n  columnWidth: ColumnWidth;\n  optCol: any;\n  actionType: ActionType;\n  actionVisible: boolean;\n}\n\nconst defaultColumnWidth: ColumnWidth = {\n  name: 140,\n  email: 500,\n  phone: 500,\n  gender: 140,\n  operation: 150,\n};\n\nconst DialogTable: React.FC = () => {\n  const [state, setState] = useSetState<DialogState>({\n    columnWidth: defaultColumnWidth,\n    optCol: null,\n    actionType: 'preview',\n    actionVisible: false,\n  });\n  const { actionVisible, columnWidth, optCol } = state;\n  const field = Field.useField([]);\n  const { paginationProps, tableProps, search, error, refresh } = useFusionTable(getTableData, {\n    field,\n  });\n  const { reset } = search;\n\n  const onResizeChange = (dataIndex: keyof typeof defaultColumnWidth, width: number) => {\n    const newWidth = {\n      ...columnWidth,\n    };\n    newWidth[dataIndex] += width;\n    setState({ columnWidth: newWidth });\n  };\n\n  const operationCallback = useCallback(({ actionType, dataSource }: OperaitionProps): void => {\n    setState({\n      actionType,\n      optCol: dataSource,\n      actionVisible: true,\n    });\n  }, [setState]);\n\n  const handleCancel = useCallback((): void => {\n    setState({ actionVisible: false });\n  }, [setState]);\n\n  const handleOk = useCallback((): void => {\n    const { actionType } = state;\n    if (actionType === 'preview') {\n      handleCancel();\n      return;\n    }\n    Message.success(actionType === 'add' ? '添加成功!' : '编辑成功!');\n    reset();\n    handleCancel();\n  }, [handleCancel, reset, state]);\n\n  const handleDelete = useCallback((data: any) => {\n    if (!data) {\n      return;\n    }\n    Dialog.confirm({\n      title: '删除提醒',\n      content: `确定删除 ${data.name.last} 吗`,\n      onOk() {\n        Message.success(`${data.name.last} 删除成功!`);\n        reset();\n      },\n    });\n  }, [reset]);\n\n  const cellOperation = (...args: any[]): React.ReactNode => {\n    const record = args[2];\n    return (\n      <div>\n        <Button\n          text\n          type=\"primary\"\n          onClick={() => operationCallback({ actionType: 'edit', dataSource: record })}\n        >\n          编辑\n        </Button>\n        &nbsp;&nbsp;\n        <Button\n          text\n          type=\"primary\"\n          onClick={() => handleDelete(record)}\n        >\n          删除\n        </Button>\n        &nbsp;&nbsp;\n        <Button\n          text\n          type=\"primary\"\n          onClick={() => operationCallback({ actionType: 'preview', dataSource: record })}\n        >\n          查看\n        </Button>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.DialogTable}>\n      <Card free>\n        <Card.Content>\n          <Table\n            {...tableProps}\n            onResizeChange={onResizeChange}\n            emptyContent={error ? <ExceptionBlock onRefresh={refresh} /> : <EmptyBlock />}\n            primaryKey=\"email\"\n          >\n            <Table.Column title=\"name\" dataIndex=\"name.last\" resizable width={columnWidth.name} />\n            <Table.Column title=\"email\" dataIndex=\"email\" resizable width={columnWidth.email} />\n            <Table.Column title=\"phone\" dataIndex=\"phone\" resizable width={columnWidth.phone} />\n            <Table.Column title=\"gender\" dataIndex=\"gender\" resizable width={columnWidth.gender} />\n            <Table.Column\n              title=\"操作\"\n              resizable\n              width={columnWidth.operation}\n              cell={cellOperation}\n            />\n          </Table>\n          <Pagination\n            style={{ marginTop: 16, textAlign: 'right' }}\n            totalRender={(total) => (\n              <>\n                共{' '}\n                <Button text type=\"primary\">\n                  {total}\n                </Button>{' '}\n                个记录\n              </>\n            )}\n            {...paginationProps}\n          />\n        </Card.Content>\n      </Card>\n      <DialogOperation\n        visible={actionVisible}\n        actionType={state.actionType}\n        dataSource={optCol}\n        onOk={handleOk}\n        onClose={handleCancel}\n        onCancel={handleCancel}\n      />\n    </div>\n  );\n};\n\nexport default DialogTable;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\components\\DialogTable\\Operation.tsx",["588"],"import React, { useEffect, useImperativeHandle } from 'react';\nimport { Select, Form, Field, Input } from '@alifd/next';\n\nconst FormItem = Form.Item;\n\nexport type ActionType = 'add' | 'edit' | 'preview';\n\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nexport interface OperaitionProps {\n  /**\n   * 操作类型, 以此来标识是添加、编辑、还是查看\n   */\n  actionType: ActionType;\n\n  /**\n   * 数据源\n   */\n  dataSource: any;\n}\n\nexport interface OperationRef {\n  getValues: (callback: (vals: Record<string, unknown>) => void) => void;\n}\n\nconst Operation: React.ForwardRefRenderFunction<OperationRef, OperaitionProps> = (props, ref) => {\n  const { actionType } = props;\n  const dataSource = props.dataSource || {};\n  const field = Field.useField([]);\n  useEffect(() => {\n    field.reset();\n    if (dataSource) {\n      const newValues = {\n        name: dataSource.name.last,\n        email: dataSource.email,\n        phone: dataSource.phone,\n        gender: dataSource.gender,\n      };\n      field.setValues(newValues);\n    }\n  }, [field, dataSource]);\n  useImperativeHandle<OperationRef, OperationRef>(\n    ref,\n    () => {\n      return {\n        getValues(callback: (vals: Record<string, unknown>) => void) {\n          field.validate((errors, values): void => {\n            if (errors) {\n              return;\n            }\n            callback(values);\n          });\n        },\n      };\n    },\n  );\n\n  const isPreview = actionType === 'preview';\n\n  return (\n    <>\n      <Form\n        isPreview={isPreview}\n        fullWidth\n        labelAlign={isPreview ? 'left' : 'top'}\n        field={field}\n        {...formItemLayout}\n      >\n        <FormItem\n          label=\"姓名:\"\n          required={!isPreview}\n          requiredMessage=\"必填\"\n        >\n          <Input\n            {...field.init('name')}\n          />\n        </FormItem>\n        <FormItem\n          label=\"邮箱:\"\n          format=\"email\"\n          required={!isPreview}\n          requiredMessage=\"必填\"\n        >\n          <Input\n            name=\"email\"\n          />\n        </FormItem>\n        <FormItem\n          label=\"手机号:\"\n          format=\"tel\"\n          required={!isPreview}\n          requiredMessage=\"必填\"\n        >\n          <Input\n            name=\"phone\"\n          />\n        </FormItem>\n        <FormItem\n          label=\"性别:\"\n          required={!isPreview}\n          requiredMessage=\"必填\"\n        >\n          <Select\n            name=\"gender\"\n            dataSource={[\n              { value: 'male', label: '男' },\n              { value: 'female', label: '女' },\n            ]}\n          />\n        </FormItem>\n      </Form>\n    </>\n  );\n};\n\nexport default React.forwardRef(Operation);\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionDialogTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionExpandTable\\components\\ExpandTable\\index.tsx",["589","590","591","592","593","594","595"],"import * as React from 'react';\nimport { Card, Table, Pagination, Field, Button } from '@alifd/next';\nimport { useFusionTable } from 'ahooks';\n\nimport styles from './index.module.scss';\n\nconst { useState } = React;\n\nconst getTableData = ({ current, pageSize }, formData: any): Promise<any> => {\n  let query = `page=${current}&size=${pageSize}`;\n  Object.entries(formData).forEach(([key, value]) => {\n    if (value) {\n      query += `&${key}=${value}`;\n    }\n  });\n  return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: 55,\n      list: res.results.slice(0, 10),\n    }));\n};\n\nfunction tableActions(val: string, index: number, record: any) {\n  return (\n    <div className={styles.tableActions}>\n      <Button type=\"primary\" text onClick={() => console.log(record, '操作1')}>\n        操作1\n      </Button>\n      <Button type=\"primary\" text onClick={() => console.log(record, '操作2')}>\n        操作2\n      </Button>\n      <Button type=\"primary\" text onClick={() => console.log(record, '操作3')}>\n        操作3\n      </Button>\n    </div>\n  );\n}\n\nfunction subTableActions(val: string, index: number, record: any) {\n  return (\n    <div className={styles.tableActions}>\n      <Button type=\"primary\" text onClick={() => console.log(record, '子表格操作1')}>\n        子表格操作1\n      </Button>\n    </div>\n  );\n}\n\nfunction SubTable(props: any) {\n  return (\n    <Table dataSource={props.dataSource} size=\"small\" hasBorder={false} primaryKey=\"postcode\">\n      <Table.Column title=\"country\" dataIndex=\"country\" />\n      <Table.Column title=\"state\" dataIndex=\"state\" />\n      <Table.Column title=\"city\" dataIndex=\"city\" />\n      <Table.Column title=\"street\" dataIndex=\"street.name\" />\n      <Table.Column cell={subTableActions} />\n    </Table>\n  );\n}\n\nexport default function ExpandTable() {\n  const field = Field.useField([]);\n  const { paginationProps, tableProps } = useFusionTable(getTableData, {\n    field,\n  });\n  const [openRows, setOpenrows] = useState([]);\n  return (\n    <Card free className={styles.container}>\n      <Card.Content>\n        <Table.StickyLock\n          {...tableProps}\n          tableWidth={1000}\n          hasBorder={false}\n          primaryKey=\"email\"\n          expandedRowRender={record => <SubTable dataSource={[record.location]} />}\n          openRowKeys={openRows}\n          onRowOpen={keys => setOpenrows(keys)}\n          expandedRowIndent={[0, 0]}\n        >\n          <Table.Column title=\"name\" dataIndex=\"name.last\" lock width={140} />\n          <Table.Column title=\"email\" dataIndex=\"email\" width={500} />\n          <Table.Column title=\"phone\" dataIndex=\"phone\" width={300} />\n          <Table.Column title=\"username\" dataIndex=\"login.username\" width={300} />\n          <Table.Column title=\"uuid\" dataIndex=\"login.uuid\" width={300} />\n          <Table.Column title=\"gender\" dataIndex=\"gender\" width={200} />\n          <Table.Column width={500} cell={tableActions} />\n        </Table.StickyLock>\n        <Pagination style={{ marginTop: 16, textAlign: 'right' }} {...paginationProps} />\n      </Card.Content>\n    </Card>\n  );\n}\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionExpandTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\EmptyBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\ExceptionBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\components\\FilterTable\\index.tsx",["596","597","598","599"],"import React, { useState } from 'react';\nimport { Button, Select, Form, Field, Table, Card, Pagination } from '@alifd/next';\nimport { useFusionTable } from 'ahooks';\n\nimport EmptyBlock from './EmptyBlock';\nimport ExceptionBlock from './ExceptionBlock';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst getTableData = (\n  { current, pageSize }: { current: number; pageSize: number },\n  formData: { status: 'normal' | 'empty' | 'exception' },\n): Promise<any> => {\n  console.log(current, pageSize, formData);\n  if (!formData.status || formData.status === 'normal') {\n    let query = `page=${current}&size=${pageSize}`;\n    Object.entries(formData).forEach(([key, value]) => {\n      if (value) {\n        query += `&${key}=${value}`;\n      }\n    });\n    return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n      .then(res => res.json())\n      .then(res => ({\n        total: 55,\n        list: res.results.slice(0, 10),\n      }));\n  }\n  if (formData.status === 'empty') {\n    return Promise.resolve([]);\n  }\n  if (formData.status === 'exception') {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('data exception'));\n      }, 1000);\n    });\n  }\n\n  return Promise.resolve([]);\n};\n\nconst defaultColumnWidth = {\n  'name.last': 140,\n  email: 500,\n  phone: 500,\n  gender: 140,\n};\n\nconst FilterTable: React.FunctionComponent = (): JSX.Element => {\n  const [columnWidth, onColumnWidthChange] = useState(defaultColumnWidth);\n  const field = Field.useField([]);\n  const { paginationProps, tableProps, search, error, refresh } = useFusionTable(getTableData, {\n    field,\n  });\n  const { submit, reset } = search;\n\n  const onResizeChange = (dataIndex: keyof typeof defaultColumnWidth, width: number) => {\n    const newWidth = {\n      ...columnWidth,\n    };\n    newWidth[dataIndex] += width;\n    onColumnWidthChange(newWidth);\n  };\n\n  return (\n    <div className={styles.FilterTable}>\n      <Card free>\n        <Card.Content>\n          <Form className=\"filter-form\" responsive fullWidth labelAlign=\"top\" field={field}>\n            <FormItem colSpan={3} label=\"数据状态\" required requiredMessage=\"必填\">\n              <Select\n                name=\"status\"\n                dataSource={[\n                  {\n                    label: '正常状态',\n                    value: 'normal',\n                  },\n                  {\n                    label: '空数据状态',\n                    value: 'empty',\n                  },\n                  {\n                    label: '数据异常状态',\n                    value: 'exception',\n                  },\n                ]}\n              />\n            </FormItem>\n            <FormItem colSpan={7} />\n            <FormItem\n              colSpan={2}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <Form.Submit type=\"primary\" onClick={submit} validate style={{ marginRight: '20px' }}>\n                提交\n              </Form.Submit>\n              <Form.Reset onClick={reset}>重置</Form.Reset>\n            </FormItem>\n          </Form>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Content>\n          <Table\n            {...tableProps}\n            onResizeChange={onResizeChange}\n            emptyContent={error ? <ExceptionBlock onRefresh={refresh} /> : <EmptyBlock />}\n            primaryKey=\"email\"\n          >\n            <Table.Column\n              title=\"name\"\n              dataIndex=\"name.last\"\n              resizable\n              width={columnWidth['name.last']}\n            />\n            <Table.Column title=\"email\" dataIndex=\"email\" resizable width={columnWidth.email} />\n            <Table.Column title=\"phone\" dataIndex=\"phone\" resizable width={columnWidth.phone} />\n            <Table.Column title=\"gender\" dataIndex=\"gender\" resizable width={columnWidth.gender} />\n          </Table>\n          <Pagination\n            style={{ marginTop: 16, textAlign: 'right' }}\n            totalRender={(total) => (\n              <>\n                共{' '}\n                <Button text type=\"primary\">\n                  {total}\n                </Button>{' '}\n                个记录\n              </>\n            )}\n            {...paginationProps}\n          />\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default FilterTable;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionFilterTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionMergecellTable\\components\\MergeCellTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionMergecellTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\EmptyBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\ExceptionBlock.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\components\\MultiColFilterTable\\index.tsx",["600","601","602","603","604"],"import React, { useCallback } from 'react';\nimport { Button, Select, Input, Form, Field, Table, Card, Pagination, Icon } from '@alifd/next';\nimport { useFusionTable, useSetState } from 'ahooks';\n\nimport EmptyBlock from './EmptyBlock';\nimport ExceptionBlock from './ExceptionBlock';\n\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst getTableData = (\n  { current, pageSize }: { current: number; pageSize: number },\n  formData: { status: 'normal' | 'empty' | 'exception' },\n): Promise<any> => {\n  console.log(current, pageSize, formData);\n  if (!formData.status || formData.status === 'normal') {\n    let query = `page=${current}&size=${pageSize}`;\n    Object.entries(formData).forEach(([key, value]) => {\n      if (value) {\n        query += `&${key}=${value}`;\n      }\n    });\n    return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n      .then(res => res.json())\n      .then(res => ({\n        total: 55,\n        list: res.results.slice(0, 10),\n      }));\n  }\n  if (formData.status === 'empty') {\n    return Promise.resolve([]);\n  }\n  if (formData.status === 'exception') {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error('data exception'));\n      }, 1000);\n    });\n  }\n\n  return Promise.resolve([]);\n};\n\ninterface ColumnWidth {\n  name: number;\n  email: number;\n  phone: number;\n  gender: number;\n}\n\ninterface MultiColState {\n  columnWidth: ColumnWidth;\n  expandStatus: boolean;\n  actionListSpan: number;\n}\n\nconst defaultColumnWidth: ColumnWidth = {\n  name: 140,\n  email: 500,\n  phone: 500,\n  gender: 140,\n};\n\n// Filter区域 默认为收起状态\nconst defaultExpandStatus = false;\n// 展开状态下一共有多少个项\nconst expandFieldLenth = 5;\n// 收起状态下一共有多少项目\nconst collapseFieldLenth = 3;\n\nconst getNextActionListSpan = (expandStatus: boolean): number => {\n  const totalFieldLength = expandStatus ? expandFieldLenth : collapseFieldLenth;\n  if (totalFieldLength < 3) {\n    return 3;\n  }\n  return (4 - (totalFieldLength % 4)) * 3;\n};\n\nconst MultiColFilterTable: React.FC = () => {\n  const [state, setState] = useSetState<MultiColState>({\n    columnWidth: defaultColumnWidth,\n    expandStatus: defaultExpandStatus,\n    actionListSpan: getNextActionListSpan(defaultExpandStatus),\n  });\n  const field = Field.useField([]);\n  const { paginationProps, tableProps, search, error, refresh } = useFusionTable(getTableData, {\n    field,\n  });\n  const { submit, reset } = search;\n  const { columnWidth } = state;\n\n  const handleResizeChange = useCallback((dataIndex: keyof typeof defaultColumnWidth, width: number) => {\n    const newWidth = {\n      ...columnWidth,\n    };\n    newWidth[dataIndex] += width;\n    setState({ columnWidth: newWidth });\n  }, [columnWidth, setState]);\n\n  const handleSetExpand = useCallback(() => {\n    const nextExpand = !state.expandStatus;\n    setState({\n      expandStatus: nextExpand,\n      actionListSpan: getNextActionListSpan(nextExpand),\n    });\n  }, [state, setState]);\n  console.log('actionListSpan', state.actionListSpan);\n  return (\n    <div className={styles.container}>\n      <Card free>\n        <Card.Content>\n          <Form className=\"filter-form\" responsive fullWidth labelAlign=\"top\" field={field}>\n            <FormItem colSpan={3} label=\"ID:\">\n              <Input name=\"id\" />\n            </FormItem>\n            <FormItem colSpan={3} label=\"性别:\" defaultValue=\"all\" required requiredMessage=\"必填\">\n              <Select\n                name=\"gender\"\n                dataSource={[\n                  {\n                    label: '男',\n                    value: 'mail',\n                  },\n                  {\n                    label: '女',\n                    value: 'femail',\n                  },\n                  {\n                    label: 'All',\n                    value: 'all',\n                  },\n                ]}\n              />\n            </FormItem>\n            <FormItem colSpan={3} label=\"邮箱:\">\n              <Input name=\"email\" />\n            </FormItem>\n            {!state.expandStatus ? null : (\n              <>\n                <FormItem colSpan={3} label=\"手机号:\">\n                  <Input name=\"phone\" />\n                </FormItem>\n                <FormItem colSpan={3} label=\"国家:\" defaultValue={[]}>\n                  <Select\n                    name=\"nat\"\n                    hasClear\n                    mode=\"multiple\"\n                    dataSource={[\n                      'AU',\n                      'BR',\n                      'CA',\n                      'CH',\n                      'DE',\n                      'DK',\n                      'ES',\n                      'FI',\n                      'FR',\n                      'GB',\n                      'IE',\n                      'IR',\n                      'NL',\n                      'NZ',\n                      'TR',\n                      'US',\n                    ]}\n                  />\n                </FormItem>\n              </>\n            )}\n            <FormItem colSpan={state.actionListSpan} className={styles['form-actions']}>\n              <Form.Submit type=\"primary\" onClick={submit} validate style={{ marginRight: 10 }}>\n                提交\n              </Form.Submit>\n              <Form.Reset onClick={reset} style={{ marginRight: 10 }}>\n                重置\n              </Form.Reset>\n              <Button onClick={handleSetExpand}>\n                {state.expandStatus ? (\n                  <>\n                    收起\n                    <Icon type=\"arrow-up\" />\n                  </>\n                ) : (\n                  <>\n                    展开\n                    <Icon type=\"arrow-down\" />\n                  </>\n                )}\n              </Button>\n            </FormItem>\n          </Form>\n        </Card.Content>\n      </Card>\n      <Card free>\n        <Card.Content>\n          <Table\n            {...tableProps}\n            onResizeChange={handleResizeChange}\n            emptyContent={error ? <ExceptionBlock onRefresh={refresh} /> : <EmptyBlock />}\n            primaryKey=\"email\"\n          >\n            <Table.Column title=\"name\" dataIndex=\"name.last\" resizable width={columnWidth.name} />\n            <Table.Column title=\"email\" dataIndex=\"email\" resizable width={columnWidth.email} />\n            <Table.Column title=\"phone\" dataIndex=\"phone\" resizable width={columnWidth.phone} />\n            <Table.Column title=\"gender\" dataIndex=\"gender\" resizable width={columnWidth.gender} />\n          </Table>\n          <Pagination\n            style={{ marginTop: 16, textAlign: 'right' }}\n            totalRender={(total) => (\n              <>\n                共{' '}\n                <Button text type=\"primary\">\n                  {total}\n                </Button>{' '}\n                个记录\n              </>\n            )}\n            {...paginationProps}\n          />\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default MultiColFilterTable;\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionMutilcolTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionSinglecolTable\\components\\SingleColFilterTable\\index.tsx",["605"],"import * as React from 'react';\nimport {\n  Form,\n  Input,\n  Radio,\n  Select,\n  Checkbox,\n  Field,\n  Table,\n  Grid,\n  Button,\n  Icon,\n  Card,\n  Pagination,\n} from '@alifd/next';\n\nimport { useFusionTable } from 'ahooks';\n\nimport styles from './index.module.scss';\n\nconst RadioGroup = Radio.Group;\nconst CheckboxGroup = Checkbox.Group;\nconst FormItem = Form.Item;\nconst formItemLayout = {\n  labelCol: {\n    fixedSpan: 10,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nconst { Row, Col } = Grid;\n\nconst LANGUAGES = [\n  { label: '汉语', value: 'cn' },\n  { label: '粤语', value: 'gd' },\n  { label: '朝鲜语', value: 'kr' },\n  { label: '法语', value: 'fr' },\n  { label: '英语', value: 'en' },\n  { label: '西班牙语', value: 'sp' },\n  { label: '意大利语', value: 'it' },\n  { label: '德文', value: 'gm' },\n  { label: '其他', value: 'other' },\n];\n\nconst STAFF_COUNTS = [\n  { label: '0-50', value: '0' },\n  { label: '50-100', value: '1' },\n  { label: '100-200', value: '2' },\n  { label: '200-500', value: '3' },\n  { label: '500以上', value: '4' },\n];\n\nconst YES_NO = [\n  { label: '是', value: '0' },\n  { label: '否', value: '1' },\n];\n\nconst LOCATIONS = [\n  { label: '北京', value: 'bj' },\n  { label: '上海', value: 'sh' },\n  { label: '深圳', value: 'sz' },\n  { label: '广州', value: 'gz' },\n  { label: '杭州', value: 'hz' },\n];\n\nconst getTableData = async ({ current, pageSize }: { current: number; pageSize: number }, formData: Record<string, any>) => {\n  const query = Object.entries(formData)\n    .map(([key, value]) => (value ? `&${key}=${value}` : ''))\n    .reduce((prev, curr) => prev + curr, `page=${current}&size=${pageSize}`);\n\n  return fetch(`https://randomuser.me/api?results=${pageSize}&${query}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: 55,\n      list: res.results.slice(0, 10),\n    }));\n};\n\nexport default function SingleColFilterTable() {\n  const field = Field.useField();\n  const { paginationProps, tableProps, search } = useFusionTable(\n    getTableData,\n    {\n      field,\n    },\n  );\n  const { type, changeType, submit } = search;\n  return (\n    <Card free>\n      <Card.Content>\n        <div className={styles.formWrap}>\n          <Form {...formItemLayout} field={field} labelTextAlign=\"left\">\n            <FormItem label=\"语言能力:\">\n              <CheckboxGroup name=\"languages\" dataSource={LANGUAGES} />\n            </FormItem>\n            <FormItem label=\"员工人数:\">\n              <RadioGroup name=\"staffCount\" dataSource={STAFF_COUNTS} />\n            </FormItem>\n            <FormItem label=\"公司已上市:\">\n              <RadioGroup name=\"ipo\" dataSource={YES_NO} />\n            </FormItem>\n            {type === 'simple' ? null : (\n              <>\n                <FormItem label=\"公司所在地:\">\n                  <Select name=\"location\" dataSource={LOCATIONS} />\n                </FormItem>\n                <FormItem label=\"境外办公室设立:\">\n                  <Select name=\"overseaOffice\" dataSource={YES_NO} />\n                </FormItem>\n                <FormItem label=\"服务商名称(中文或英文):\">\n                  <Input name=\"isvName\" style={{ width: 260 }} />\n                </FormItem>\n              </>\n            )}\n\n            <Row>\n              <Col span={14}>\n                <Button type=\"primary\" onClick={submit}>\n                  搜索\n                </Button>\n              </Col>\n              <Col span={10} style={{ textAlign: 'right' }}>\n                {type === 'simple' ? (\n                  <Button text onClick={changeType}>\n                    展开 <Icon type=\"arrow-down\" />\n                  </Button>\n                ) : (\n                  <Button text onClick={changeType}>\n                    收起 <Icon type=\"arrow-up\" />\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        <Table {...tableProps} primaryKey=\"email\">\n          <Table.Column title=\"name\" dataIndex=\"name.last\" width={140} />\n          <Table.Column title=\"email\" dataIndex=\"email\" width={500} />\n          <Table.Column title=\"phone\" dataIndex=\"phone\" width={500} />\n          <Table.Column title=\"gender\" dataIndex=\"gender\" width={500} />\n        </Table>\n        <Pagination {...paginationProps} className={styles.pagination} />\n      </Card.Content>\n    </Card>\n  );\n}\n","E:\\workspace_react\\zt-tm\\src\\pages\\FusionSinglecolTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionSingletreeTable\\components\\SingleTreeTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\FusionSingletreeTable\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Login\\components\\LoginBlock\\index.tsx",["606","607"],"import React, { useState } from 'react';\nimport { Input, Message, Form, Divider, Checkbox, Icon } from '@alifd/next';\n\nimport { useInterval } from './utils';\nimport styles from './index.module.scss';\n\nconst { Item } = Form;\n\nexport interface IDataSource {\n  name: string;\n  password: string;\n  autoLogin: boolean;\n  phone: string;\n  code: string;\n}\n\nconst DEFAULT_DATA: IDataSource = {\n  name: '',\n  // eslint-disable-next-line @iceworks/best-practices/no-secret-info\n  password: '',\n  autoLogin: true,\n  phone: '',\n  code: '',\n};\n\ninterface LoginProps {\n  dataSource?: IDataSource;\n}\n\nconst LoginBlock: React.FunctionComponent<LoginProps> = (\n  props = { dataSource: DEFAULT_DATA },\n): JSX.Element => {\n  const { dataSource = DEFAULT_DATA } = props;\n\n  const [postData, setValue] = useState(dataSource);\n\n  const [isRunning, checkRunning] = useState(false);\n  const [isPhone, checkPhone] = useState(false);\n  const [second, setSecond] = useState(59);\n\n  useInterval(\n    () => {\n      setSecond(second - 1);\n      if (second <= 0) {\n        checkRunning(false);\n        setSecond(59);\n      }\n    },\n    isRunning ? 1000 : null,\n  );\n\n  const formChange = (values: IDataSource) => {\n    setValue(values);\n  };\n\n  const sendCode = (values: IDataSource, errors: []) => {\n    if (errors) {\n      return;\n    }\n    // get values.phone\n    checkRunning(true);\n  };\n\n  const handleSubmit = (values: IDataSource, errors: []) => {\n    if (errors) {\n      console.log('errors', errors);\n      return;\n    }\n    console.log('values:', values);\n    Message.success('登录成功');\n  };\n\n  const phoneForm = (\n    <>\n      <Item format=\"tel\" required requiredMessage=\"必填\" asterisk={false}>\n        <Input\n          name=\"phone\"\n          innerBefore={\n            <span className={styles.innerBeforeInput}>\n              +86\n              <span className={styles.line} />\n            </span>\n          }\n          maxLength={20}\n          placeholder=\"手机号\"\n        />\n      </Item>\n      <Item required requiredMessage=\"必填\" style={{ marginBottom: 0 }}>\n        <Input\n          name=\"code\"\n          innerAfter={\n            <span className={styles.innerAfterInput}>\n              <span className={styles.line} />\n              <Form.Submit\n                text\n                type=\"primary\"\n                style={{ width: 64 }}\n                disabled={!!isRunning}\n                validate={['phone']}\n                onClick={sendCode}\n                className={styles.sendCode}\n              >\n                {isRunning ? `${second}秒后再试` : '获取验证码'}\n              </Form.Submit>\n            </span>\n          }\n          maxLength={20}\n          placeholder=\"验证码\"\n        />\n      </Item>\n    </>\n  );\n\n  const accountForm = (\n    <>\n      <Item required requiredMessage=\"必填\">\n        <Input name=\"name\" maxLength={20} placeholder=\"用户名\" />\n      </Item>\n      <Item required requiredMessage=\"必填\" style={{ marginBottom: 0 }}>\n        <Input.Password name=\"password\" htmlType=\"password\" placeholder=\"密码\" />\n      </Item>\n    </>\n  );\n\n  const byAccount = () => {\n    checkPhone(false);\n  };\n\n  const byForm = () => {\n    checkPhone(true);\n  };\n\n  return (\n    <div className={styles.LoginBlock}>\n      <div className={styles.innerBlock}>\n        <a href=\"#\">\n          <img\n            className={styles.logo}\n            src=\"https://img.alicdn.com/tfs/TB1KtN6mKH2gK0jSZJnXXaT1FXa-1014-200.png\"\n            alt=\"logo\"\n          />\n        </a>\n        <div className={styles.desc}>\n          <span onClick={byAccount} className={isPhone ? undefined : styles.active}>\n            账户密码登录\n          </span>\n          <Divider direction=\"ver\" />\n          <span onClick={byForm} className={isPhone ? styles.active : undefined}>\n            手机号登录\n          </span>\n        </div>\n\n        <Form value={postData} onChange={formChange} size=\"large\">\n          {isPhone ? phoneForm : accountForm}\n\n          <div className={styles.infoLine}>\n            <Item style={{ marginBottom: 0 }}>\n              <Checkbox name=\"autoLogin\" className={styles.infoLeft}>\n                自动登录\n              </Checkbox>\n            </Item>\n            <div>\n              <a href=\"/\" className={styles.link}>\n                忘记密码\n              </a>\n            </div>\n          </div>\n\n          <Item style={{ marginBottom: 10 }}>\n            <Form.Submit\n              type=\"primary\"\n              onClick={handleSubmit}\n              className={styles.submitBtn}\n              validate\n            >\n              登录\n            </Form.Submit>\n          </Item>\n          <div className={styles.infoLine}>\n            <div className={styles.infoLeft}>\n              其他登录方式 <Icon type=\"atm\" size=\"small\" /> <Icon type=\"atm\" size=\"small\" />{' '}\n              <Icon type=\"atm\" size=\"small\" />\n            </div>\n            <a href=\"/\" className={styles.link}>\n              注册账号\n            </a>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginBlock;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Login\\components\\LoginBlock\\utils.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Login\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardAreaChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardAreaChart\\mock.js",["608"],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardPieChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\TrendChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\VisitBlock\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\WebInfoBlock\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\mock.js",["609"],"export default {\n  JSErrorRate: {\n    value: '2556',\n    name: 'js错误率',\n    des: '周同比:',\n    rate: '10.1',\n    isRise: true,\n  },\n  APISuccessRate: {\n    value: '3456',\n    name: 'API成功率',\n    des: '周同比:',\n    rate: '10.1',\n    isRise: true,\n  },\n  FirstRenderTime: {\n    value: '3456ms',\n    name: '首次渲染时间',\n    des: '周同比:',\n    rate: '10.1',\n    isRise: true,\n  },\n  ResourceError: {\n    value: '3456',\n    name: '资源错误',\n    des: '周同比:',\n    rate: '10.1',\n    isRise: false,\n  },\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Person\\components\\SettingPersonBlock\\index.tsx",["610","611"],"import React, { useState } from 'react';\nimport { Box, ResponsiveGrid, Divider, Card, Avatar, Upload, Button, Form, Input, Message } from '@alifd/next';\n\nimport styles from './index.module.scss';\n\nconst { Cell } = ResponsiveGrid;\nconst FormItem = Form.Item;\n\nexport interface DataSource {\n  name?: string;\n  phone?: string;\n  vcode?: string;\n  pic?: UploadProps[];\n}\n\nexport interface SettingPersonProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  name: '阿里-Amy',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: SettingPersonProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('更新成功');\n};\n\nconst SettingPersonBlock: React.SFC<SettingPersonProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n  } = props;\n\n  const [postData, setValue] = useState<SettingPersonProps>(dataSource);\n  const [buttonText, setButtonText] = useState('发送验证码');\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n\n  const formChange = (values: SettingPersonProps): void => {\n    setValue(values);\n  };\n\n  let coutDownTimer: NodeJS.Timeout;\n  let countDown = 60;\n\n  // 获取验证码按钮点击示例\n  const onValideCodeButtonClicked = (): void => {\n    setButtonDisabled(true);\n    countDown = 60;\n    setButtonText(`${countDown}s`);\n\n    coutDownTimer = setInterval(() => {\n      if (--countDown <= 0) {\n        if (coutDownTimer) clearInterval(coutDownTimer);\n        setButtonText('获取验证码');\n        setButtonDisabled(false);\n        return;\n      }\n\n      setButtonText(`${countDown}s`);\n    }, 1000);\n  };\n\n  return (\n    <Card free>\n      <Card.Content className={styles.SettingPersonBlock}>\n        <Form value={postData} labelAlign=\"top\" onChange={formChange} responsive>\n          <FormItem label=\"\" colSpan={12}>\n            <ResponsiveGrid gap={10}>\n              <Cell colSpan={2}>\n                <Avatar shape=\"circle\" size={64} icon=\"account\" />\n              </Cell>\n              <Cell colSpan={10} className={styles.changeLogo}>\n                <Box spacing={12}>\n                  <FormItem>\n                    <Upload name=\"pic\">\n                      <Button className={styles.uploadButton} type=\"normal\">\n                        更新头像\n                      </Button>\n                    </Upload>\n                  </FormItem>\n                  <Box>\n                    <p>* 头像尽量上传超过 80px*80px, 但不要太大了。</p>\n                    <p>* 请上传两倍图保证清晰度</p>\n                  </Box>\n                </Box>\n              </Cell>\n            </ResponsiveGrid>\n          </FormItem>\n          <FormItem colSpan={12}>\n            <Divider />\n          </FormItem>\n          <FormItem label=\"昵称\" required requiredMessage=\"必填\" colSpan={12}>\n            <Input placeholder=\"请输入昵称\" name=\"name\" />\n          </FormItem>\n\n          <FormItem label=\"手机：\" colSpan={12}>\n            <ResponsiveGrid gap={10} device=\"desktop\">\n              <Cell colSpan={8}>\n                <Input className={styles.validateCodeInput} placeholder=\"请输入手机\" name=\"phone\" />\n              </Cell>\n              <Cell colSpan={4}>\n                <Button\n                  className={styles.valideCodeButton}\n                  type=\"secondary\"\n                  disabled={buttonDisabled}\n                  onClick={onValideCodeButtonClicked}\n                >\n                  {buttonText}\n                </Button>\n              </Cell>\n            </ResponsiveGrid>\n          </FormItem>\n\n          <FormItem label=\"验证码\" colSpan={12}>\n            <Input placeholder=\"请输入验证码\" name=\"vcode\" />\n          </FormItem>\n\n          <FormItem colSpan={12}>\n            <Box spacing={8} direction=\"row\">\n              <Form.Submit type=\"primary\" onClick={onSubmit} validate>\n                更新信息\n              </Form.Submit>\n            </Box>\n          </FormItem>\n        </Form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default SettingPersonBlock;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Person\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Register\\components\\LoginBlock\\index.tsx",["612","613","614"],"/* eslint-disable @iceworks/best-practices/no-secret-info */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Message, Form } from '@alifd/next';\n\nimport { useInterval } from './utils';\nimport styles from './index.module.scss';\n\nconst { Item } = Form;\n\nexport interface RegisterProps {\n  email: string;\n  password: string;\n  rePassword: string;\n  phone: string;\n  code: string;\n}\n\nexport default function RegisterBlock() {\n  const [postData, setValue] = useState({\n    email: '',\n    password: '',\n    rePassword: '',\n    phone: '',\n    code: '',\n  });\n\n  const [isRunning, checkRunning] = useState(false);\n  const [second, setSecond] = useState(59);\n\n  useInterval(() => {\n    setSecond(second - 1);\n    if (second <= 0) {\n      checkRunning(false);\n      setSecond(59);\n    }\n  }, isRunning ? 1000 : null);\n\n  const formChange = (value: RegisterProps) => {\n    setValue(value);\n  };\n\n  const sendCode = (values: RegisterProps, errors: []) => {\n    if (errors) {\n      return;\n    }\n    // get values.phone\n    checkRunning(true);\n  };\n\n  const checkPass = (rule: any, values: string, callback: (errors?: string) => void) => {\n    if (values && values !== postData.password) {\n      return callback('密码不一致');\n    } else {\n      return callback();\n    }\n  };\n\n  const handleSubmit = (values: RegisterProps, errors: []) => {\n    if (errors) {\n      console.log('errors', errors);\n      return;\n    }\n    console.log('values:', values);\n    Message.success('注册成功');\n  };\n\n  return (\n    <div className={styles.RegisterBlock}>\n      <div className={styles.innerBlock}>\n        <a href=\"#\">\n          <img\n            className={styles.logo}\n            src=\"https://img.alicdn.com/tfs/TB1KtN6mKH2gK0jSZJnXXaT1FXa-1014-200.png\"\n            alt=\"logo\"\n          />\n        </a>\n        <p className={styles.desc}>注册账号</p>\n\n        <Form value={postData} onChange={formChange} size=\"large\">\n          <Item format=\"email\" required requiredMessage=\"必填\">\n            <Input name=\"email\" size=\"large\" maxLength={20} placeholder=\"邮箱\" />\n          </Item>\n          <Item required requiredMessage=\"必填\">\n            <Input.Password\n              name=\"password\"\n              size=\"large\"\n              htmlType=\"password\"\n              placeholder=\"至少六位密码，区分大小写\"\n            />\n          </Item>\n          <Item required requiredTrigger=\"onFocus\" requiredMessage=\"必填\" validator={checkPass}>\n            <Input.Password\n              name=\"rePassword\"\n              size=\"large\"\n              htmlType=\"password\"\n              placeholder=\"确认密码\"\n            />\n          </Item>\n          <Item format=\"tel\" required requiredMessage=\"必填\" asterisk={false}>\n            <Input\n              name=\"phone\"\n              size=\"large\"\n              innerBefore={\n                <span className={styles.innerBeforeInput}>\n                  +86\n                  <span className={styles.line} />\n                </span>\n              }\n              maxLength={20}\n              placeholder=\"手机号\"\n            />\n          </Item>\n          <Item required requiredMessage=\"必填\">\n            <Input\n              name=\"code\"\n              size=\"large\"\n              innerAfter={\n                <span className={styles.innerAfterInput}>\n                  <span className={styles.line} />\n                  <Form.Submit\n                    text\n                    type=\"primary\"\n                    style={{ width: 64 }}\n                    disabled={!!isRunning}\n                    validate={['phone']}\n                    onClick={sendCode}\n                    className={styles.sendCode}\n                  >\n                    {isRunning ? `${second}秒后再试` : '获取验证码'}\n                  </Form.Submit>\n                </span>\n              }\n              maxLength={20}\n              placeholder=\"验证码\"\n            />\n          </Item>\n          <Item>\n            <Form.Submit\n              type=\"primary\"\n              onClick={handleSubmit}\n              className={styles.submitBtn}\n              validate\n            >\n              注册账号\n            </Form.Submit>\n          </Item>\n          <Item style={{ textAlign: 'center' }}>\n            <a href=\"/\" className={styles.link}>\n              使用已有账号登录\n            </a>\n          </Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nRegisterBlock.propTypes = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  value: PropTypes.object,\n};\n\nRegisterBlock.defaultProps = {\n  value: {},\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Register\\components\\LoginBlock\\utils.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Register\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Settings\\components\\SettingSystemBlock\\index.tsx",["615","616","617","618","619"],"import React, { useState, useEffect } from 'react';\nimport { Avatar, Card, Tab, ResponsiveGrid, Table, Typography, Upload, Button, Form, Input, Message, Box, Radio, Dialog, Icon } from '@alifd/next';\nimport { UploadProps } from '@alifd/next/types/upload';\nimport styles from './index.module.scss';\n\nconst { Cell } = ResponsiveGrid;\nconst FormItem = Form.Item;\n\nconst MockData = [\n  {\n    name: '阿不思·布萊恩·鄧不利多',\n    logo: 'https://img.alicdn.com/tfs/TB1WsE2n5_1gK0jSZFqXXcpaXXa-183-183.png',\n    privilege: '管理员',\n  },\n  {\n    name: '戒钱',\n    logo: 'https://img.alicdn.com/tfs/TB1cjwYnVT7gK0jSZFpXXaTkpXa-183-183.png',\n    privilege: '管理员',\n  },\n  {\n    name: '格林德沃',\n    logo: 'https://img.alicdn.com/tfs/TB1l7g0nYr1gK0jSZR0XXbP8XXa-183-183.png',\n    privilege: '管理员',\n  },\n  {\n    name: '哈利玻特',\n    logo: 'https://img.alicdn.com/tfs/TB1WUurnubviK0jSZFNXXaApXXa-183-183.png',\n    privilege: '管理员',\n  },\n  {\n    name: '小天狼星',\n    logo: 'https://img.alicdn.com/tfs/TB10Ts2n1L2gK0jSZFmXXc7iXXa-183-183.png',\n    privilege: '成员',\n  },\n  {\n    name: '罗恩',\n    logo: 'https://img.alicdn.com/tfs/TB1HHwYnVY7gK0jSZKzXXaikpXa-183-183.png',\n    privilege: '成员',\n  },\n  {\n    name: '伏地魔',\n    logo: 'https://img.alicdn.com/tfs/TB1T_WrnubviK0jSZFNXXaApXXa-183-183.png',\n    privilege: '成员',\n  },\n  {\n    name: '赫敏',\n    logo: 'https://img.alicdn.com/tfs/TB1D_GrnubviK0jSZFNXXaApXXa-183-183.png',\n    privilege: '成员',\n  },\n];\n\nexport interface DataSource {\n  name?: string;\n  category?: string;\n  description?: string;\n  type?: string;\n  pic?: UploadProps[];\n}\n\nexport interface SettingSystemProps {\n  dataSource?: DataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\n\nconst DEFAULT_DATA: DataSource = {\n  name: 'lily',\n  type: 'private',\n  description: 'Fusion是一套企业级中后台设计系统解决方案，致力于解决产品体验一致性问题、设计研发协同问题，以及UI开发效率问题。',\n};\n\nconst DEFAULT_ON_SUBMIT = (values: SettingSystemProps, errors: []): void => {\n  if (errors) {\n    console.log('errors', errors);\n    return;\n  }\n  console.log('values:', values);\n  Message.success('更新成功');\n};\n\nconst SettingSystemBlock: React.SFC<SettingSystemProps> = (props): JSX.Element => {\n  const {\n    dataSource = DEFAULT_DATA,\n    onSubmit = DEFAULT_ON_SUBMIT,\n  } = props;\n\n  const [priList, setPriList] = useState([]);\n  const [inited, setInited] = useState(false);\n  const [postData, setValue] = useState<SettingSystemProps>(dataSource);\n\n  useEffect(() => {\n    setPriList(MockData);\n    setInited(true);\n  }, [inited]);\n\n\n  const formChange = (values: SettingSystemProps): void => {\n    setValue(values);\n  };\n\n  const onExitButtonClicked = (): void => {\n    Dialog.confirm({\n      title: '退出项目',\n      content: '确定退出该项目？',\n      messageProps: {\n        type: 'warning',\n      },\n      onOk: (): void => console.log('ok'),\n      onCancel: (): void => console.log('cancel'),\n    });\n  };\n\n  return (\n    <div className={styles.SettingPersonBlock}>\n      <Tab className={styles.customTab} navClassName={styles.customTabHead}>\n        <Tab.Item title=\"基础设置\" key=\"basic\">\n          <Card free>\n            <Card.Content>\n              <Box className={styles.baseSettingContainer}>\n                <Form\n                  className={styles.baseSetting}\n                  value={postData}\n                  labelAlign=\"top\"\n                  onChange={formChange}\n                  responsive\n                >\n                  <FormItem label=\"项目封面\" colSpan={12}>\n                    <ResponsiveGrid gap={10}>\n                      <Cell colSpan={2}><Avatar shape=\"circle\" size={64} icon=\"account\" /></Cell>\n                      <Cell colSpan={10} className={styles.changeLogo}>\n                        <Box spacing={12}>\n                          <FormItem>\n                            <Upload name=\"pic\">\n                              <Button className={styles.uploadButton} type=\"normal\">更新头像</Button>\n                            </Upload>\n                          </FormItem>\n                          <Box>\n                            <p>* 头像尽量上传超过 80px*80px, 但不要太大了。</p>\n                            <p>* 请上传两倍图保证清晰度</p>\n                          </Box>\n                        </Box>\n                      </Cell>\n                    </ResponsiveGrid>\n                  </FormItem>\n                  <FormItem label=\"项目名称\" required requiredMessage=\"必填\" colSpan={12}>\n                    <Input placeholder=\"请输入项目名称\" name=\"name\" />\n                  </FormItem>\n\n                  <FormItem label=\"项目所属分类\" required requiredMessage=\"必填\" colSpan={12}>\n                    <Input placeholder=\"请输入你的分类\" name=\"category\" />\n                  </FormItem>\n\n                  <FormItem colSpan={12} label=\"项目权限\" >\n                    <Radio.Group name=\"type\" aria-labelledby=\"authority of project\">\n                      <Radio id=\"private\" value=\"private\">私密项目</Radio>\n                      <Radio id=\"internal\" value=\"internal\">内部项目</Radio>\n                      <Radio id=\"public\" value=\"public\">开放项目</Radio>\n                    </Radio.Group>\n                  </FormItem>\n                  <FormItem label=\"项目描述\" colSpan={12}>\n                    <Input.TextArea placeholder=\"请输入项目描述\" name=\"description\" />\n                  </FormItem>\n\n                  <FormItem colSpan={12}>\n                    <Box spacing={8} direction=\"row\">\n                      <Form.Submit\n                        type=\"primary\"\n                        onClick={onSubmit}\n                        validate\n                      >保存\n                      </Form.Submit>\n                    </Box>\n                  </FormItem>\n                </Form>\n              </Box>\n            </Card.Content>\n          </Card>\n        </Tab.Item>\n\n        <Tab.Item title=\"权限设置\" key=\"privilege\">\n          <Card free contentHeight={600}>\n            <Card.Header\n              title=\"权限设置\"\n              extra={\n                <Box spacing={10} direction=\"row\">\n                  <Button type=\"secondary\">设置角色 1 权限</Button>\n                  <Button type=\"primary\">新增</Button>\n                </Box>\n            }\n            />\n            <Card.Content>\n              <Table dataSource={priList} hasHeader={false} hasBorder={false}>\n                <Table.Column dataIndex=\"logo\" cell={url => <Avatar src={url} />} width={50} />\n                <Table.Column dataIndex=\"name\" />\n                <Table.Column dataIndex=\"privilege\" />\n                <Table.Column cell={() => <Icon type=\"ellipsis\" />} />\n              </Table>\n            </Card.Content>\n          </Card>\n        </Tab.Item>\n\n        <Tab.Item title=\"更多设置\" key=\"more\">\n          <Card free>\n            <Card.Content>\n              <Box spacing={12}>\n                <Typography.H3 className={styles.h3}>退出项目</Typography.H3>\n                <Typography.Text className={styles.p}>一旦你退出这个项目，你将无法访问这个项目的任何内容。</Typography.Text>\n                <span>\n                  <Button type=\"normal\" warning onClick={onExitButtonClicked}>退出项目</Button>\n                </span>\n              </Box>\n            </Card.Content>\n          </Card>\n        </Tab.Item>\n      </Tab>\n    </div>\n  );\n};\n\nexport default SettingSystemBlock;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Settings\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\SelectLang\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\Tasks\\index.tsx",["620","621"],"import * as React from 'react';\nimport { Form, Card, Input, Message, Button, List, Divider } from '@alifd/next';\nimport store from '@/pages/Solution/store';\n\ninterface IDataSource {\n  title: string;\n  description: string;\n}\n\ninterface IFromValue {\n  dataSource?: IDataSource;\n  onSubmit?: () => void;\n  onCancel?: () => void;\n}\nconst formItemLayout = {\n  colSpan: 6,\n};\n\nconst FormItem = Form.Item;\nconst Tasks = () => {\n  const [taskList, taskDispatchers] = store.useModel('tasks');\n\n  console.log(taskList, taskDispatchers);\n  const handleSubmit = (values: IFromValue): void => {\n    taskDispatchers.addTask(values);\n    Message.success('提交成功');\n  };\n\n  const handleRemoveTask = (index: number) => {\n    taskDispatchers.removeTask(index);\n  };\n\n  return (\n    <Card free>\n      <Card.Header\n        title=\"状态管理 - 页面状态\"\n      />\n      <Card.Content>\n        <Form\n          responsive\n          labelAlign=\"top\"\n        >\n          <FormItem {...formItemLayout} label=\"任务名称：\" required requiredMessage=\"必填\">\n            <Input placeholder=\"请输入任务名称\" name=\"title\" />\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"任务描述：\" required requiredMessage=\"必填\">\n            <Input placeholder=\"请输入任务名称\" name=\"description\" />\n          </FormItem>\n          <FormItem colSpan={12}>\n            <Form.Submit\n              type=\"primary\"\n              onClick={handleSubmit}\n              validate\n            >添加任务\n            </Form.Submit>\n          </FormItem>\n        </Form>\n        <Divider />\n        { taskList.length ? (\n          <List>\n            {taskList.map(({ title, description }, index) => (\n              <List.Item key={index} extra={<Button text type=\"primary\" onClick={() => handleRemoveTask(index)}>删除任务</Button>} title={title}>\n                <p>{description}</p>\n              </List.Item>\n            ))}\n          </List>\n        ) : <p>暂无任务</p>}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\components\\UserInfo\\index.tsx",["622"],"import React, { useEffect } from 'react';\nimport { Avatar, Card } from '@alifd/next';\nimport store from '@/store';\n\nconst UserInfo = () => {\n  const [userInfo, userDispatchers] = store.useModel('user');\n  useEffect(() => {\n    userDispatchers.fetchUserProfile();\n  }, []);\n\n  return (\n    <Card free>\n      <Card.Header\n        title=\"状态管理 - 全局状态\"\n      />\n      <Card.Divider />\n      <Card.Content>\n        <Avatar size=\"small\" src={userInfo.avatar} />\n        <span style={{ marginLeft: 10 }}>{userInfo.name}</span>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\models\\tasks.ts",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Solution\\store.ts",[],"E:\\workspace_react\\zt-tm\\src\\pages\\TableListPage\\components\\BasicList\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\TableListPage\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\components\\WorkTable\\index.tsx",["623","624","625","626","627","628"],"import React, { useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Typography,\n  Tag,\n  ResponsiveGrid,\n  Tab,\n  Card,\n  Table,\n  Calendar,\n  Timeline,\n  List,\n} from '@alifd/next';\nimport mock from './mock';\n\nimport styles from './index.module.scss';\n\nconst { Cell } = ResponsiveGrid;\nconst TimelineItem = Timeline.Item;\n\ninterface OrderItem {\n  name?: string;\n  state?: string;\n  level?: string;\n}\n\ninterface ProjectItem {\n  projectId?: number;\n  projectName?: string;\n  projectDesc?: string;\n  createTime?: string;\n  img?: string;\n  update?: string;\n}\n\ninterface TimeLineItem {\n  planName?: string;\n  planAddress?: string;\n  planTime?: string;\n  planDuaring?: string;\n}\n\ninterface UpdateItem {\n  projectItem?: string;\n  project?: string;\n  time?: string;\n  name?: string;\n  action?: string;\n  avatar?: string;\n}\n\ninterface EntranceItem {\n  name?: string;\n  link?: string;\n}\n\nexport interface DataSource {\n  orderList?: OrderItem[];\n  projectList?: ProjectItem[];\n  timeLineList?: TimeLineItem[];\n  updateList?: UpdateItem[];\n  entranceList?: EntranceItem[];\n  person?: {\n    avatar?: string;\n    surname?: string;\n    name?: string;\n    email?: string;\n  };\n}\n\nconst DEFAULT_DATA: DataSource = {\n  person: {\n    avatar: 'https://img.alicdn.com/tfs/TB1XdnvvUY1gK0jSZFCXXcwqXXa-500-500.png',\n    surname: '谢',\n    name: '莉莉',\n    email: 'xielili@aliwork-inc.com',\n  },\n  orderList: mock.orderList,\n  projectList: mock.projectList,\n  timeLineList: mock.timeLineList,\n  updateList: mock.updateList,\n  entranceList: mock.entrances,\n};\nexport interface WorkTableProps {\n  dataSource?: DataSource;\n}\n\nconst colorMap = {\n  high: 'red',\n  middle: 'yellow',\n  low: 'green',\n};\n\nconst WorkTable: SFC<WorkTableProps> = (props: WorkTableProps): JSX.Element => {\n  const { dataSource = DEFAULT_DATA } = props;\n\n  const { person, orderList, projectList, timeLineList, updateList, entranceList } = dataSource;\n\n  const [tab, setTab] = useState('1');\n\n  const changeTab = (val: string) => setTab(val);\n\n  const renderLevel = (text: string, index: number) => {\n    return (\n      <span key={text + index.toString()}>\n        <Tag size=\"small\" color={colorMap[text]}>\n          {text}\n        </Tag>\n      </span>\n    );\n  };\n\n  return (\n    <div className={styles.WorkTable}>\n      <div className={styles.workerContainor}>\n        <Box flex={1}>\n          <Box direction=\"row\" spacing={28}>\n            <Avatar size={80} src={person.avatar} className={styles.avatar} />\n            <Box>\n              <Typography.Text className={styles.TitleName}>\n                {person.surname}\n                {person.name}\n              </Typography.Text>\n              <Typography.Text className={styles.TitleInfo}>{person.email}</Typography.Text>\n            </Box>\n          </Box>\n          <Tab activeKey={tab} className={styles.tab} onChange={changeTab}>\n            <Tab.Item title=\"选项卡一\" key=\"1\" />\n            <Tab.Item title=\"选项卡二\" key=\"2\" />\n            <Tab.Item title=\"选项卡三\" key=\"3\" />\n          </Tab>\n        </Box>\n      </div>\n      <div className={styles.workTableContent}>\n        <ResponsiveGrid gap={20}>\n          <Cell colSpan={8}>\n            <Card free style={{ height: '100%' }}>\n              <Card.Header title=\"我的任务\" />\n              <Card.Divider />\n              <Card.Content>\n                <Table\n                  dataSource={orderList}\n                  hasBorder={false}\n                  rowSelection={{\n                    getProps: (record: OrderItem, index: number): any => ({\n                      children: (\n                        <span key={index} className=\"next-table-cell-wrapper\">\n                          {record.name}\n                        </span>\n                      ),\n                    }),\n                    columnProps: () => ({ width: 330 }),\n                    titleAddons: () => <span key=\"title\" className=\"next-table-cell-wrapper\">任务名称</span>,\n                  }}\n                >\n                  <Table.Column title=\"所属阶段\" dataIndex=\"state\" width={230} />\n                  <Table.Column title=\"优先级\" dataIndex=\"level\" cell={renderLevel} width={150} />\n                </Table>\n              </Card.Content>\n            </Card>\n          </Cell>\n          <Cell colSpan={4}>\n            <Card free>\n              <Card.Header title=\"我的日程\" />\n              <Card.Divider />\n              <Card.Content>\n                <Box spacing={10}>\n                  <Calendar shape=\"panel\" />\n                  <Typography.Text className={styles.planNumber}>\n                    共 <span className={styles.strong}>{timeLineList.length}</span>个日程\n                  </Typography.Text>\n                  <Timeline>\n                    {timeLineList.map(\n                      (item): JSX.Element => (\n                        <TimelineItem\n                          key={item.planTime}\n                          title={item.planName}\n                          content={item.planAddress}\n                          timeLeft={\n                            <>\n                              <span className={styles.planTime}>{item.planTime}</span>\n                              <br />\n                              <span className={styles.planDuaring}>{item.planDuaring}</span>\n                            </>\n                          }\n                        />\n                      ),\n                    )}\n                  </Timeline>\n                </Box>\n              </Card.Content>\n            </Card>\n          </Cell>\n          <Cell colSpan={8}>\n            <Card free>\n              <Card.Header title=\"近期项目\" />\n              <Card.Divider />\n              <Card.Content>\n                <List>\n                  {projectList.map((project) => {\n                    return (\n                      <List.Item key={project.projectName} title={project.projectName} media={<Avatar src={project.img} />}>\n                        {project.projectDesc}\n                      </List.Item>\n                    );\n                  })}\n                  <List.Item>查看全部任务</List.Item>\n                </List>\n              </Card.Content>\n            </Card>\n          </Cell>\n          <Cell colSpan={4}>\n            <Card free style={{ height: '100%' }}>\n              <Card.Header title=\"我的项目\" />\n              <Card.Divider />\n              <Card.Content>\n                <List>\n                  <List.Item\n                    title=\"Fusion Design\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1SFZAvQL0gK0jSZFAXXcA9pXa-200-200.png\" />\n                    }\n                  />\n                  <List.Item\n                    title=\"Alibaba ICS\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1QwMzvHr1gK0jSZR0XXbP8XXa-200-200.png\" />\n                    }\n                  />\n                  <List.Item\n                    title=\"Retcode 前端监控\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1qxgDvG61gK0jSZFlXXXDKFXa-200-200.png\" />\n                    }\n                  />\n                  <List.Item\n                    title=\"新零售事业部\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1TfwDvQT2gK0jSZFkXXcIQFXa-200-200.png\" />\n                    }\n                  />\n                  <List.Item\n                    title=\"前端物料中心\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1GgMzvHr1gK0jSZR0XXbP8XXa-200-200.png\" />\n                    }\n                  />\n                  <List.Item\n                    title=\"大财鲸\"\n                    media={\n                      <Avatar src=\"https://img.alicdn.com/tfs/TB1tHozvQP2gK0jSZPxXXacQpXa-200-200.png\" />\n                    }\n                  />\n                </List>\n              </Card.Content>\n            </Card>\n          </Cell>\n          <Cell colSpan={8}>\n            <Card free>\n              <Card.Header title=\"动态\" />\n              <Card.Divider />\n              <Card.Content>\n                <List>\n                  {updateList.map((one, idx) => {\n                    let title;\n                    switch (one.action) {\n                      case 'create':\n                        title = (\n                          <div key={idx}>\n                            {one.name} 在 <a href=\"/\">{one.project}</a> 新建项目{' '}\n                            <a href=\"/\">{one.projectItem}</a>{' '}\n                          </div>\n                        );\n                        break;\n                      case 'release':\n                        title = (\n                          <div key={idx}>\n                            {one.name} 将 <a href=\"/\">{one.project}</a> 更新至发布状态{' '}\n                          </div>\n                        );\n                        break;\n                      case 'note':\n                        title = (\n                          <div key={idx}>\n                            {one.name} 在 <a href=\"/\">{one.project}</a> 发布了{' '}\n                            <a href=\"/\">{one.projectItem}</a>{' '}\n                          </div>\n                        );\n                        break;\n                      default:\n                        break;\n                    }\n\n                    return (\n                      <List.Item key={idx} title={title} media={<Avatar src={one.avatar} />}>\n                        {one.time}\n                      </List.Item>\n                    );\n                  })}\n                </List>\n              </Card.Content>\n            </Card>\n          </Cell>\n          <Cell colSpan={4}>\n            <Card free>\n              <Card.Header\n                title=\"快捷入口\"\n                extra={\n                  <Button type=\"primary\" size=\"large\" text component=\"a\" href=\"#/\">\n                    设置\n                  </Button>\n                }\n              />\n              <Card.Divider />\n              <Card.Content>\n                <Box spacing={[20, 50]} direction=\"row\" wrap>\n                  {entranceList.map((item, idx) => {\n                    return (\n                      <Button key={idx} size=\"large\" text component=\"a\" href={item.link}>\n                        {item.name}\n                      </Button>\n                    );\n                  })}\n                </Box>\n              </Card.Content>\n            </Card>\n          </Cell>\n        </ResponsiveGrid>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkTable;\n","E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\components\\WorkTable\\mock.js",["629"],"export default {\n  orderList: [\n    {\n      id: 1,\n      name: '蓝瓶咖啡线下体验店室内设计1',\n      state: '进行中',\n      level: 'high',\n    },\n    {\n      id: 2,\n      name: '双12投放 Banner',\n      state: '进行中',\n      level: 'high',\n    },\n    {\n      id: 3,\n      name: 'Global 大促活动',\n      state: '进行中',\n      level: 'high',\n    },\n    {\n      id: 4,\n      name: 'Banner 拓展',\n      state: '进行中',\n      level: 'middle',\n    },\n    {\n      id: 5,\n      name: '类目市场宣传设计',\n      state: '待处理',\n      level: 'low',\n    },\n    {\n      id: 6,\n      name: '类目市场宣传设计',\n      state: '待处理',\n      level: 'low',\n    },\n    {\n      id: 7,\n      name: '类目市场宣传设计',\n      state: '待处理',\n      level: 'low',\n    },\n  ],\n  timeLineList: [\n    {\n      planName: '财经周会',\n      planAddress: '深圳 T4-4-1；杭州 7-4-9-N',\n      planTime: '09:00',\n      planDuaring: '2小时',\n    },\n    {\n      planName: '财经周会',\n      planAddress: '深圳 T4-4-1；杭州 7-4-9-N',\n      planTime: '11:00',\n      planDuaring: '2小时',\n    },\n  ],\n  projectList: [\n    {\n      projectId: 1,\n      projectName: 'Alibaba ICS 研发',\n      projectDesc: '一站式设计协作管理平台',\n      createTime: '2019-11-12',\n      update: '莉莉 2小时前',\n      img: 'https://img.alicdn.com/tfs/TB1JLwHvHj1gK0jSZFOXXc7GpXa-200-200.png',\n    },\n    {\n      projectId: 2,\n      projectName: '计件平台研发管理',\n      projectDesc: '面向全集团各业务部门的外包设计及管理服务',\n      createTime: '2019-11-12',\n      update: '钉钉 2小时前',\n      img: 'https://img.alicdn.com/tfs/TB1533CvKL2gK0jSZPhXXahvXXa-200-200.png',\n    },\n    {\n      projectId: 3,\n      projectName: '素材中心研发管理',\n      projectDesc: '集团统一的素材管理平台',\n      createTime: '2019-11-12',\n      update: '默默 2天前',\n      img: 'https://img.alicdn.com/tfs/TB1IfwHvHj1gK0jSZFOXXc7GpXa-200-200.png',\n    },\n    {\n      projectId: 4,\n      projectName: '设计服务平台管理',\n      projectDesc: '从需求、缺陷、迭代的管理到统一的报告一应俱全',\n      createTime: '2019-11-12',\n      update: '钉钉 2小时前',\n      img: 'https://img.alicdn.com/tfs/TB15twFvQY2gK0jSZFgXXc5OFXa-200-200.png',\n    },\n    {\n      projectId: 5,\n      projectName: 'Alibaba XiNiu Survey',\n      projectDesc: '一站式用户主观数据分析平台',\n      createTime: '2019-11-12',\n      update: '默默 2天前',\n      img: 'https://img.alicdn.com/tfs/TB1InwHvQT2gK0jSZFkXXcIQFXa-200-200.png',\n    },\n  ],\n  updateList: [\n    {\n      projectItem: 'Fusion Design',\n      project: '设计中台',\n      time: '4小时前',\n      name: '阮小五',\n      action: 'create',\n      avatar: 'https://img.alicdn.com/tfs/TB1corrvHr1gK0jSZFDXXb9yVXa-500-500.png',\n    },\n    {\n      projectItem: 'ICS Design',\n      project: '设计中台',\n      time: '4小时前',\n      name: '樊瑞',\n      action: 'create',\n      avatar: 'https://img.alicdn.com/tfs/TB1uD_svKH2gK0jSZFEXXcqMpXa-500-500.png',\n    },\n    {\n      projectItem: 'Fusion Design',\n      project: '设计中台',\n      time: '4小时前',\n      name: '李力',\n      action: 'release',\n      avatar: 'https://img.alicdn.com/tfs/TB12knwvHj1gK0jSZFuXXcrHpXa-500-500.png',\n    },\n    {\n      projectItem: 'Done',\n      project: '设计服务平台',\n      time: '4小时前',\n      name: '公孙胜',\n      action: 'create',\n      avatar: 'https://img.alicdn.com/tfs/TB1aD_svKH2gK0jSZFEXXcqMpXa-500-500.png',\n    },\n    {\n      projectItem: '留言',\n      project: '设计中台',\n      time: '4小时前',\n      name: '阮小七',\n      action: 'note',\n      avatar: 'https://img.alicdn.com/tfs/TB13djnvGL7gK0jSZFBXXXZZpXa-500-500.png',\n    },\n  ],\n  entrances: [{\n    name: '操作一',\n    link: '/',\n  }, {\n    name: '操作二',\n    link: '/',\n  }, {\n    name: '操作三',\n    link: '/',\n  }, {\n    name: '操作四',\n    link: '/',\n  }, {\n    name: '操作五',\n    link: '/',\n  }, {\n    name: '操作六',\n    link: '/',\n  }, {\n    name: '操作七',\n    link: '/',\n  }, {\n    name: '操作八',\n    link: '/',\n  }],\n};\n","E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\index.tsx",[],"E:\\workspace_react\\zt-tm\\src\\routes.ts",[],"E:\\workspace_react\\zt-tm\\src\\store.ts",[],"E:\\workspace_react\\zt-tm\\src\\typings.d.ts",[],"E:\\workspace_react\\zt-tm\\src\\utils\\locale.ts",[],{"ruleId":"630","severity":1,"message":"631","line":2,"column":27,"nodeType":"632","messageId":"633","endLine":2,"endColumn":37},{"ruleId":"634","severity":1,"message":"635","line":18,"column":35,"nodeType":"632","messageId":"636","endLine":18,"endColumn":38},{"ruleId":"637","severity":2,"message":"638","line":19,"column":9,"nodeType":"639","messageId":"640","endLine":19,"endColumn":35,"fix":"641"},{"ruleId":"642","severity":1,"message":"643","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"645","severity":1,"message":"646","line":8,"column":3,"nodeType":"647","messageId":"648","endLine":8,"endColumn":14},{"ruleId":"649","severity":1,"message":"650","line":95,"column":6,"nodeType":"651","endLine":95,"endColumn":16,"suggestions":"652"},{"ruleId":"642","severity":1,"message":"653","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"642","severity":1,"message":"654","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"642","severity":1,"message":"655","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"642","severity":1,"message":"656","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"634","severity":1,"message":"635","line":49,"column":29,"nodeType":"632","messageId":"636","endLine":49,"endColumn":32},{"ruleId":"642","severity":1,"message":"657","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"634","severity":1,"message":"635","line":95,"column":45,"nodeType":"632","messageId":"636","endLine":95,"endColumn":46},{"ruleId":"634","severity":1,"message":"635","line":91,"column":58,"nodeType":"632","messageId":"636","endLine":91,"endColumn":59},{"ruleId":"634","severity":1,"message":"635","line":247,"column":32,"nodeType":"632","messageId":"636","endLine":247,"endColumn":35},{"ruleId":"645","severity":1,"message":"646","line":36,"column":5,"nodeType":"647","messageId":"648","endLine":36,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":39,"column":3,"nodeType":"647","messageId":"648","endLine":39,"endColumn":14},{"ruleId":"645","severity":1,"message":"646","line":66,"column":7,"nodeType":"647","messageId":"648","endLine":66,"endColumn":18},{"ruleId":"645","severity":1,"message":"646","line":73,"column":5,"nodeType":"647","messageId":"648","endLine":73,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":37,"column":5,"nodeType":"647","messageId":"648","endLine":37,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":40,"column":3,"nodeType":"647","messageId":"648","endLine":40,"endColumn":14},{"ruleId":"634","severity":1,"message":"635","line":35,"column":76,"nodeType":"632","messageId":"636","endLine":35,"endColumn":81},{"ruleId":"645","severity":1,"message":"646","line":41,"column":5,"nodeType":"647","messageId":"648","endLine":41,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":51,"column":7,"nodeType":"647","messageId":"648","endLine":51,"endColumn":18},{"ruleId":"645","severity":1,"message":"646","line":38,"column":5,"nodeType":"647","messageId":"648","endLine":38,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":41,"column":3,"nodeType":"647","messageId":"648","endLine":41,"endColumn":14},{"ruleId":"645","severity":1,"message":"646","line":36,"column":5,"nodeType":"647","messageId":"648","endLine":36,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":39,"column":3,"nodeType":"647","messageId":"648","endLine":39,"endColumn":14},{"ruleId":"658","severity":1,"message":"659","line":18,"column":11,"nodeType":"660","messageId":"661","endLine":18,"endColumn":14,"fix":"662"},{"ruleId":"658","severity":1,"message":"659","line":19,"column":11,"nodeType":"660","messageId":"661","endLine":19,"endColumn":14,"fix":"663"},{"ruleId":"664","severity":1,"message":"665","line":18,"column":5,"nodeType":"666","messageId":"667","endLine":18,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":24,"column":13,"nodeType":"660","messageId":"661","endLine":24,"endColumn":16,"fix":"668"},{"ruleId":"658","severity":1,"message":"659","line":25,"column":13,"nodeType":"660","messageId":"661","endLine":25,"endColumn":16,"fix":"669"},{"ruleId":"649","severity":1,"message":"670","line":31,"column":9,"nodeType":"671","endLine":31,"endColumn":44},{"ruleId":"664","severity":1,"message":"665","line":11,"column":3,"nodeType":"666","messageId":"667","endLine":11,"endColumn":27},{"ruleId":"645","severity":1,"message":"646","line":27,"column":50,"nodeType":"647","messageId":"648","endLine":27,"endColumn":61},{"ruleId":"645","severity":1,"message":"646","line":30,"column":50,"nodeType":"647","messageId":"648","endLine":30,"endColumn":61},{"ruleId":"645","severity":1,"message":"646","line":33,"column":50,"nodeType":"647","messageId":"648","endLine":33,"endColumn":61},{"ruleId":"645","severity":1,"message":"646","line":43,"column":50,"nodeType":"647","messageId":"648","endLine":43,"endColumn":61},{"ruleId":"658","severity":1,"message":"659","line":76,"column":30,"nodeType":"660","messageId":"661","endLine":76,"endColumn":36,"fix":"672"},{"ruleId":"658","severity":1,"message":"659","line":78,"column":22,"nodeType":"660","messageId":"661","endLine":78,"endColumn":26,"fix":"673"},{"ruleId":"645","severity":1,"message":"646","line":16,"column":3,"nodeType":"647","messageId":"648","endLine":16,"endColumn":14},{"ruleId":"664","severity":1,"message":"665","line":19,"column":5,"nodeType":"666","messageId":"667","endLine":19,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":25,"column":13,"nodeType":"660","messageId":"661","endLine":25,"endColumn":16,"fix":"674"},{"ruleId":"658","severity":1,"message":"659","line":26,"column":13,"nodeType":"660","messageId":"661","endLine":26,"endColumn":16,"fix":"675"},{"ruleId":"645","severity":1,"message":"646","line":16,"column":3,"nodeType":"647","messageId":"648","endLine":16,"endColumn":14},{"ruleId":"664","severity":1,"message":"665","line":19,"column":5,"nodeType":"666","messageId":"667","endLine":19,"endColumn":29},{"ruleId":"658","severity":1,"message":"659","line":25,"column":13,"nodeType":"660","messageId":"661","endLine":25,"endColumn":16,"fix":"676"},{"ruleId":"658","severity":1,"message":"659","line":26,"column":13,"nodeType":"660","messageId":"661","endLine":26,"endColumn":16,"fix":"677"},{"ruleId":"645","severity":1,"message":"646","line":108,"column":3,"nodeType":"647","messageId":"648","endLine":108,"endColumn":14},{"ruleId":"664","severity":1,"message":"665","line":69,"column":17,"nodeType":"666","messageId":"667","endLine":69,"endColumn":41},{"ruleId":"645","severity":1,"message":"646","line":66,"column":7,"nodeType":"647","messageId":"648","endLine":66,"endColumn":18},{"ruleId":"645","severity":1,"message":"646","line":69,"column":5,"nodeType":"647","messageId":"648","endLine":69,"endColumn":16},{"ruleId":"642","severity":1,"message":"678","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"642","severity":1,"message":"679","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},{"ruleId":"645","severity":1,"message":"646","line":28,"column":5,"nodeType":"647","messageId":"648","endLine":28,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":31,"column":3,"nodeType":"647","messageId":"648","endLine":31,"endColumn":14},{"ruleId":"645","severity":1,"message":"646","line":61,"column":7,"nodeType":"647","messageId":"648","endLine":61,"endColumn":18},{"ruleId":"645","severity":1,"message":"646","line":64,"column":5,"nodeType":"647","messageId":"648","endLine":64,"endColumn":16},{"ruleId":"680","severity":1,"message":"681","line":161,"column":3,"nodeType":"682","messageId":"683","endLine":161,"endColumn":26},{"ruleId":"645","severity":1,"message":"646","line":74,"column":5,"nodeType":"647","messageId":"648","endLine":74,"endColumn":16},{"ruleId":"645","severity":1,"message":"646","line":77,"column":3,"nodeType":"647","messageId":"648","endLine":77,"endColumn":14},{"ruleId":"645","severity":1,"message":"646","line":108,"column":25,"nodeType":"647","messageId":"648","endLine":108,"endColumn":36},{"ruleId":"645","severity":1,"message":"646","line":109,"column":29,"nodeType":"647","messageId":"648","endLine":109,"endColumn":40},{"ruleId":"658","severity":1,"message":"659","line":193,"column":54,"nodeType":"660","messageId":"661","endLine":193,"endColumn":57,"fix":"684"},{"ruleId":"645","severity":1,"message":"646","line":23,"column":3,"nodeType":"647","messageId":"648","endLine":23,"endColumn":14},{"ruleId":"634","severity":1,"message":"635","line":62,"column":31,"nodeType":"632","messageId":"636","endLine":62,"endColumn":36},{"ruleId":"649","severity":1,"message":"685","line":9,"column":6,"nodeType":"651","endLine":9,"endColumn":8,"suggestions":"686"},{"ruleId":"664","severity":1,"message":"687","line":107,"column":25,"nodeType":"666","messageId":"667","endLine":107,"endColumn":41},{"ruleId":"634","severity":1,"message":"635","line":271,"column":37,"nodeType":"632","messageId":"636","endLine":271,"endColumn":40},{"ruleId":"634","severity":1,"message":"635","line":279,"column":37,"nodeType":"632","messageId":"636","endLine":279,"endColumn":40},{"ruleId":"634","severity":1,"message":"635","line":286,"column":37,"nodeType":"632","messageId":"636","endLine":286,"endColumn":40},{"ruleId":"634","severity":1,"message":"635","line":297,"column":39,"nodeType":"632","messageId":"636","endLine":297,"endColumn":42},{"ruleId":"634","severity":1,"message":"635","line":321,"column":36,"nodeType":"632","messageId":"636","endLine":321,"endColumn":39},{"ruleId":"642","severity":1,"message":"688","line":0,"column":1,"nodeType":null,"messageId":"644","endLine":0,"endColumn":1},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react/no-array-index-key","Do not use Array index in keys","noArrayIndex","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"689","text":"690"},"@iceworks/best-practices/no-js-in-ts-project","The 'E:\\workspace_react\\zt-tm\\src\\layouts\\BasicLayout\\components\\Lang\\index.jsx' is not recommended in TS project","noJSInTSProject","no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'openKeys'. Either include it or remove the dependency array. You can also do a functional update 'setOpenKeys(o => ...)' if you only need 'openKeys' in the 'setOpenKeys' call.","ArrayExpression",["691"],"The 'E:\\workspace_react\\zt-tm\\src\\locales\\locale.js' is not recommended in TS project","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardAreaChart\\mock.js' is not recommended in TS project","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardBarChart\\mock.js' is not recommended in TS project","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardLineChart\\mock.js' is not recommended in TS project","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Analysis\\components\\FusionCardTypebarChart\\mock.js' is not recommended in TS project","arrow-parens","Expected parentheses around arrow function argument.","ArrowFunctionExpression","expectedParens",{"range":"692","text":"693"},{"range":"694","text":"693"},"@iceworks/best-practices/recommend-polyfill","[Critical] It is recommended to add polyfill for \"Object.entries\", This might be caused by a compatibility problem in \"safari@9\"","CallExpression","recommendPolyfill",{"range":"695","text":"693"},{"range":"696","text":"693"},"The 'dataSource' logical expression could make the dependencies of useEffect Hook (at line 44) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'dataSource' in its own useMemo() Hook.","VariableDeclarator",{"range":"697","text":"698"},{"range":"699","text":"700"},{"range":"701","text":"693"},{"range":"702","text":"693"},{"range":"703","text":"693"},{"range":"704","text":"693"},"The 'E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\components\\CardAreaChart\\mock.js' is not recommended in TS project","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Monitor\\components\\FusionCardPieChart\\mock.js' is not recommended in TS project","react/forbid-prop-types","Prop type \"object\" is forbidden","Property","forbiddenPropType",{"range":"705","text":"706"},"React Hook useEffect has a missing dependency: 'userDispatchers'. Either include it or remove the dependency array.",["707"],"[Critical] It is recommended to add polyfill for \"undefined.toString\", This might be caused by a compatibility problem in \"iOS9\"","The 'E:\\workspace_react\\zt-tm\\src\\pages\\Workplace\\components\\WorkTable\\mock.js' is not recommended in TS project",[471,485]," />",{"desc":"708","fix":"709"},[719,722],"(res)",[748,751],[916,919],[947,950],[2256,2262],"(record)",[2365,2369],"(keys)",[862,865],[893,896],[891,894],[922,925],[6187,6190],"(url)",{"desc":"710","fix":"711"},"Update the dependencies array to be: [openKeys, pathname]",{"range":"712","text":"713"},"Update the dependencies array to be: [userDispatchers]",{"range":"714","text":"715"},[2520,2530],"[openKeys, pathname]",[268,270],"[userDispatchers]"]